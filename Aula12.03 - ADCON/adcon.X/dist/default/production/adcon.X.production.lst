

Microchip Technology PIC18 LITE Macro Assembler V1.40 build -251452761 
                                                                                               Sat Jun 06 23:56:17 2020

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	18F4450
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27  0000                     
    28                           ; Version 1.40
    29                           ; Generated 01/12/2016 GMT
    30                           ; 
    31                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F4450 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     
    63                           	psect	idataCOMRAM
    64  000AFA                     __pidataCOMRAM:
    65                           	opt stack 0
    66                           
    67                           ;initializer for EscreveInteiroLCD@F3290
    68  000AFA  30                 	db	48
    69  000AFB  30                 	db	48
    70  000AFC  30                 	db	48
    71  000AFD  30                 	db	48
    72  000AFE  30                 	db	48
    73  000AFF  30                 	db	48
    74  000B00  00                 	db	0
    75                           
    76                           	psect	smallconst
    77  000500                     __psmallconst:
    78                           	opt stack 0
    79  000500  00                 	db	0
    80  000501  0001               	dw	1
    81  000503  0000               	dw	0
    82  000505  000A               	dw	10
    83  000507  0000               	dw	0
    84  000509  0064               	dw	100
    85  00050B  0000               	dw	0
    86  00050D  03E8               	dw	1000
    87  00050F  0000               	dw	0
    88  000511  2710               	dw	10000
    89  000513  0000               	dw	0
    90  000515  86A0               	dw	34464
    91  000517  0001               	dw	1
    92  000519  4240               	dw	16960
    93  00051B  000F               	dw	15
    94  00051D  9680               	dw	38528
    95  00051F  0098               	dw	152
    96  000521  E100               	dw	57600
    97  000523  05F5               	dw	1525
    98  000525  CA00               	dw	51712
    99  000527  3B9A               	dw	15258
   100  000529                     __end_of_dpowers:
   101                           	opt stack 0
   102  000529                     _Texto_0:
   103                           	opt stack 0
   104  000529  43                 	db	67
   105  00052A  6F                 	db	111
   106  00052B  6E                 	db	110
   107  00052C  76                 	db	118
   108  00052D  65                 	db	101
   109  00052E  72                 	db	114
   110  00052F  73                 	db	115
   111  000530  6F                 	db	111
   112  000531  72                 	db	114
   113  000532  20                 	db	32
   114  000533  41                 	db	65
   115  000534  44                 	db	68
   116  000535  43                 	db	67
   117  000536  20                 	db	32
   118  000537  00                 	db	0
   119  000538                     __end_of_Texto_0:
   120                           	opt stack 0
   121  000538                     _Texto_1:
   122                           	opt stack 0
   123  000538  41                 	db	65
   124  000539  4E                 	db	78
   125  00053A  30                 	db	48
   126  00053B  20                 	db	32
   127  00053C  3D                 	db	61
   128  00053D  20                 	db	32
   129  00053E  00                 	db	0
   130  00053F                     __end_of_Texto_1:
   131                           	opt stack 0
   132  0000                     _ADCON0bits	set	4034
   133  0000                     _ADCON1	set	4033
   134  0000                     _ADCON1bits	set	4033
   135  0000                     _ADCON2bits	set	4032
   136  0000                     _ADRESH	set	4036
   137  0000                     _ADRESL	set	4035
   138  0000                     _PORTDbits	set	3971
   139  0000                     _TRISDbits	set	3989
   140  00053F  25                 	db	37
   141  000540  6C                 	db	108	;'l'
   142  000541  75                 	db	117	;'u'
   143  000542  2E                 	db	46
   144  000543  25                 	db	37
   145  000544  36                 	db	54	;'6'
   146  000545  2E                 	db	46
   147  000546  36                 	db	54	;'6'
   148  000547  6C                 	db	108	;'l'
   149  000548  75                 	db	117	;'u'
   150  000549  00                 	db	0
   151  00054A  00                 	db	0	; dummy byte at the end
   152  0000                     
   153                           ; #config settings
   154                           
   155                           	psect	cinit
   156  000A7C                     __pcinit:
   157                           	opt stack 0
   158  000A7C                     start_initialization:
   159                           	opt stack 0
   160  000A7C                     __initialization:
   161                           	opt stack 0
   162                           
   163                           ; Initialize objects allocated to COMRAM (7 bytes)
   164                           ; load TBLPTR registers with __pidataCOMRAM
   165  000A7C  0EFA               	movlw	low __pidataCOMRAM
   166  000A7E  6EF6               	movwf	tblptrl,c
   167  000A80  0E0A               	movlw	high __pidataCOMRAM
   168  000A82  6EF7               	movwf	tblptrh,c
   169  000A84  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   170  000A86  6EF8               	movwf	tblptru,c
   171  000A88  EE00  F037         	lfsr	0,__pdataCOMRAM
   172  000A8C  EE10 F007          	lfsr	1,7
   173  000A90                     copy_data0:
   174  000A90  0009               	tblrd		*+
   175  000A92  CFF5 FFEE          	movff	tablat,postinc0
   176  000A96  50E5               	movf	postdec1,w,c
   177  000A98  50E1               	movf	fsr1l,w,c
   178  000A9A  E1FA               	bnz	copy_data0
   179                           
   180                           ; Clear objects allocated to COMRAM (19 bytes)
   181  000A9C  EE00  F024         	lfsr	0,__pbssCOMRAM
   182  000AA0  0E13               	movlw	19
   183  000AA2                     clear_0:
   184  000AA2  6AEE               	clrf	postinc0,c
   185  000AA4  06E8               	decf	wreg,f,c
   186  000AA6  E1FD               	bnz	clear_0
   187  000AA8                     end_of_initialization:
   188                           	opt stack 0
   189  000AA8                     __end_of__initialization:
   190                           	opt stack 0
   191  000AA8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   192  000AAA  6EF8               	movwf	tblptru,c
   193  000AAC  0100               	movlb	0
   194  000AAE  EFA6  F002         	goto	_main	;jump to C main() function
   195                           tblptru	equ	0xFF8
   196                           tblptrh	equ	0xFF7
   197                           tblptrl	equ	0xFF6
   198                           tablat	equ	0xFF5
   199                           postinc0	equ	0xFEE
   200                           wreg	equ	0xFE8
   201                           postdec1	equ	0xFE5
   202                           fsr1l	equ	0xFE1
   203                           
   204                           	psect	bssCOMRAM
   205  000024                     __pbssCOMRAM:
   206                           	opt stack 0
   207  000024                     _valor_AN0:
   208                           	opt stack 0
   209  000024                     	ds	2
   210  000026                     ftoa@buf:
   211                           	opt stack 0
   212  000026                     	ds	17
   213                           tblptru	equ	0xFF8
   214                           tblptrh	equ	0xFF7
   215                           tblptrl	equ	0xFF6
   216                           tablat	equ	0xFF5
   217                           postinc0	equ	0xFEE
   218                           wreg	equ	0xFE8
   219                           postdec1	equ	0xFE5
   220                           fsr1l	equ	0xFE1
   221                           
   222                           	psect	dataCOMRAM
   223  000037                     __pdataCOMRAM:
   224                           	opt stack 0
   225  000037                     EscreveInteiroLCD@F3290:
   226                           	opt stack 0
   227  000037                     	ds	7
   228                           tblptru	equ	0xFF8
   229                           tblptrh	equ	0xFF7
   230                           tblptrl	equ	0xFF6
   231                           tablat	equ	0xFF5
   232                           postinc0	equ	0xFEE
   233                           wreg	equ	0xFE8
   234                           postdec1	equ	0xFE5
   235                           fsr1l	equ	0xFE1
   236                           
   237                           	psect	cstackCOMRAM
   238  000001                     __pcstackCOMRAM:
   239                           	opt stack 0
   240  000001                     ?___lwdiv:
   241                           	opt stack 0
   242  000001                     ?___lwmod:
   243                           	opt stack 0
   244  000001                     Delay@Cnt1:
   245                           	opt stack 0
   246  000001                     delay_ms@delaytime:
   247                           	opt stack 0
   248  000001                     ___lwdiv@dividend:
   249                           	opt stack 0
   250  000001                     ___lwmod@dividend:
   251                           	opt stack 0
   252                           
   253                           ; 2 bytes @ 0x0
   254  000001                     	ds	1
   255  000002                     Delay@Cnt2:
   256                           	opt stack 0
   257                           
   258                           ; 1 bytes @ 0x1
   259  000002                     	ds	1
   260  000003                     ??_delay_ms:
   261  000003                     EscreveComandoLCD@cmd:
   262                           	opt stack 0
   263  000003                     EnderecoCursor@endereco:
   264                           	opt stack 0
   265  000003                     EscreveCaractereLCD@data:
   266                           	opt stack 0
   267  000003                     ___lwdiv@divisor:
   268                           	opt stack 0
   269  000003                     ___lwmod@divisor:
   270                           	opt stack 0
   271                           
   272                           ; 2 bytes @ 0x2
   273  000003                     	ds	1
   274  000004                     ??_ConfiguraLCD:
   275  000004                     PosicaoCursorLCD@coluna:
   276                           	opt stack 0
   277  000004                     EscreveFraseRamLCD@buffer:
   278                           	opt stack 0
   279                           
   280                           ; 2 bytes @ 0x3
   281  000004                     	ds	1
   282  000005                     PosicaoCursorLCD@linha:
   283                           	opt stack 0
   284  000005                     ___lwmod@counter:
   285                           	opt stack 0
   286  000005                     ___lwdiv@quotient:
   287                           	opt stack 0
   288                           
   289                           ; 2 bytes @ 0x4
   290  000005                     	ds	1
   291  000006                     PosicaoCursorLCD@EnderecoLCD:
   292                           	opt stack 0
   293                           
   294                           ; 1 bytes @ 0x5
   295  000006                     	ds	1
   296  000007                     ___lwdiv@counter:
   297                           	opt stack 0
   298                           
   299                           ; 1 bytes @ 0x6
   300  000007                     	ds	1
   301  000008                     utoa@buf:
   302                           	opt stack 0
   303                           
   304                           ; 2 bytes @ 0x7
   305  000008                     	ds	2
   306  00000A                     utoa@val:
   307                           	opt stack 0
   308                           
   309                           ; 2 bytes @ 0x9
   310  00000A                     	ds	2
   311  00000C                     utoa@base:
   312                           	opt stack 0
   313                           
   314                           ; 2 bytes @ 0xB
   315  00000C                     	ds	2
   316  00000E                     utoa@v:
   317                           	opt stack 0
   318                           
   319                           ; 2 bytes @ 0xD
   320  00000E                     	ds	2
   321  000010                     utoa@c:
   322                           	opt stack 0
   323                           
   324                           ; 1 bytes @ 0xF
   325  000010                     	ds	1
   326  000011                     itoa@buf:
   327                           	opt stack 0
   328                           
   329                           ; 2 bytes @ 0x10
   330  000011                     	ds	2
   331  000013                     itoa@val:
   332                           	opt stack 0
   333                           
   334                           ; 2 bytes @ 0x12
   335  000013                     	ds	2
   336  000015                     itoa@base:
   337                           	opt stack 0
   338                           
   339                           ; 2 bytes @ 0x14
   340  000015                     	ds	2
   341  000017                     itoa@cp:
   342                           	opt stack 0
   343                           
   344                           ; 2 bytes @ 0x16
   345  000017                     	ds	2
   346  000019                     EscreveInteiroLCD@valor:
   347                           	opt stack 0
   348                           
   349                           ; 2 bytes @ 0x18
   350  000019                     	ds	2
   351  00001B                     EscreveInteiroLCD@texto:
   352                           	opt stack 0
   353                           
   354                           ; 7 bytes @ 0x1A
   355  00001B                     	ds	7
   356  000022                     ??_main:
   357                           
   358                           ; 1 bytes @ 0x21
   359  000022                     	ds	2
   360                           tblptru	equ	0xFF8
   361                           tblptrh	equ	0xFF7
   362                           tblptrl	equ	0xFF6
   363                           tablat	equ	0xFF5
   364                           postinc0	equ	0xFEE
   365                           wreg	equ	0xFE8
   366                           postdec1	equ	0xFE5
   367                           fsr1l	equ	0xFE1
   368                           
   369 ;;
   370 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   371 ;;
   372 ;; *************** function _main *****************
   373 ;; Defined at:
   374 ;;		line 23 in file "adcon.c"
   375 ;; Parameters:    Size  Location     Type
   376 ;;		None
   377 ;; Auto vars:     Size  Location     Type
   378 ;;		None
   379 ;; Return value:  Size  Location     Type
   380 ;;                  1    wreg      void 
   381 ;; Registers used:
   382 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   383 ;; Tracked objects:
   384 ;;		On entry : 0/0
   385 ;;		On exit  : 0/0
   386 ;;		Unchanged: 0/0
   387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK4
   388 ;;      Params:         0       0       0       0
   389 ;;      Locals:         0       0       0       0
   390 ;;      Temps:          2       0       0       0
   391 ;;      Totals:         2       0       0       0
   392 ;;Total ram usage:        2 bytes
   393 ;; Hardware stack levels required when called:    4
   394 ;; This function calls:
   395 ;;		_ConfiguraLCD
   396 ;;		_EscreveComandoLCD
   397 ;;		_EscreveFraseRamLCD
   398 ;;		_EscreveInteiroLCD
   399 ;;		_PosicaoCursorLCD
   400 ;;		_delay_ms
   401 ;; This function is called by:
   402 ;;		Startup code after reset
   403 ;; This function uses a non-reentrant model
   404 ;;
   405                           
   406                           	psect	text0
   407  00054C                     __ptext0:
   408                           	opt stack 0
   409  00054C                     _main:
   410                           	opt stack 27
   411                           
   412                           ;adcon.c: 25: ADCON1 = 0x0E;
   413                           
   414                           ;incstack = 0
   415  00054C  0E0E               	movlw	14
   416  00054E  6EC1               	movwf	4033,c	;volatile
   417                           
   418                           ;adcon.c: 26: ADCON2bits.ADFM = 1;
   419  000550  8EC0               	bsf	4032,7,c	;volatile
   420                           
   421                           ;adcon.c: 27: ADCON1bits.VCFG0 = 0;
   422  000552  98C1               	bcf	4033,4,c	;volatile
   423                           
   424                           ;adcon.c: 28: ADCON1bits.VCFG1 = 0;
   425  000554  9AC1               	bcf	4033,5,c	;volatile
   426                           
   427                           ;adcon.c: 29: ADCON2bits.ADCS0 = 0;
   428  000556  90C0               	bcf	4032,0,c	;volatile
   429                           
   430                           ;adcon.c: 30: ADCON2bits.ADCS1 = 1;
   431  000558  82C0               	bsf	4032,1,c	;volatile
   432                           
   433                           ;adcon.c: 31: ADCON2bits.ADCS2 = 1;
   434  00055A  84C0               	bsf	4032,2,c	;volatile
   435                           
   436                           ;adcon.c: 32: ADCON2bits.ACQT0 = 1;
   437  00055C  86C0               	bsf	4032,3,c	;volatile
   438                           
   439                           ;adcon.c: 33: ADCON2bits.ACQT1 = 0;
   440  00055E  98C0               	bcf	4032,4,c	;volatile
   441                           
   442                           ;adcon.c: 34: ADCON2bits.ACQT2 = 0;
   443  000560  9AC0               	bcf	4032,5,c	;volatile
   444                           
   445                           ;adcon.c: 35: ADCON0bits.ADON = 1;
   446  000562  80C2               	bsf	4034,0,c	;volatile
   447                           
   448                           ;adcon.c: 36: ADCON0bits.CHS0 = 0;
   449  000564  94C2               	bcf	4034,2,c	;volatile
   450                           
   451                           ;adcon.c: 37: ADCON0bits.CHS1 = 0;
   452  000566  96C2               	bcf	4034,3,c	;volatile
   453                           
   454                           ;adcon.c: 38: ADCON0bits.CHS2 = 0;
   455  000568  98C2               	bcf	4034,4,c	;volatile
   456                           
   457                           ;adcon.c: 39: ADCON0bits.CHS3 = 0;
   458  00056A  9AC2               	bcf	4034,5,c	;volatile
   459                           
   460                           ;adcon.c: 42: ConfiguraLCD();
   461  00056C  EC58  F003         	call	_ConfiguraLCD	;wreg free
   462                           
   463                           ;adcon.c: 43: delay_ms(20);
   464  000570  0E00               	movlw	0
   465  000572  6E02               	movwf	delay_ms@delaytime+1,c
   466  000574  0E14               	movlw	20
   467  000576  6E01               	movwf	delay_ms@delaytime,c
   468  000578  EC59  F005         	call	_delay_ms	;wreg free
   469                           
   470                           ;adcon.c: 44: PosicaoCursorLCD(1,1);
   471  00057C  0E01               	movlw	1
   472  00057E  6E04               	movwf	PosicaoCursorLCD@coluna,c
   473  000580  0E01               	movlw	1
   474  000582  EC5B  F004         	call	_PosicaoCursorLCD
   475                           
   476                           ;adcon.c: 45: EscreveFraseRamLCD(Texto_0);
   477  000586  0E29               	movlw	low _Texto_0
   478  000588  6E04               	movwf	EscreveFraseRamLCD@buffer,c
   479  00058A  0E05               	movlw	high _Texto_0
   480  00058C  6E05               	movwf	EscreveFraseRamLCD@buffer+1,c
   481  00058E  ECB5  F004         	call	_EscreveFraseRamLCD	;wreg free
   482                           
   483                           ;adcon.c: 46: PosicaoCursorLCD(2,1);
   484  000592  0E01               	movlw	1
   485  000594  6E04               	movwf	PosicaoCursorLCD@coluna,c
   486  000596  0E02               	movlw	2
   487  000598  EC5B  F004         	call	_PosicaoCursorLCD
   488                           
   489                           ;adcon.c: 47: EscreveFraseRamLCD(Texto_1);
   490  00059C  0E38               	movlw	low _Texto_1
   491  00059E  6E04               	movwf	EscreveFraseRamLCD@buffer,c
   492  0005A0  0E05               	movlw	high _Texto_1
   493  0005A2  6E05               	movwf	EscreveFraseRamLCD@buffer+1,c
   494  0005A4  ECB5  F004         	call	_EscreveFraseRamLCD	;wreg free
   495                           
   496                           ;adcon.c: 48: EscreveComandoLCD(0b00001100);
   497  0005A8  0E0C               	movlw	12
   498  0005AA  ECA7  F003         	call	_EscreveComandoLCD
   499                           
   500                           ;adcon.c: 49: delay_ms(3000);
   501  0005AE  0E0B               	movlw	11
   502  0005B0  6E02               	movwf	delay_ms@delaytime+1,c
   503  0005B2  0EB8               	movlw	184
   504  0005B4  6E01               	movwf	delay_ms@delaytime,c
   505  0005B6  EC59  F005         	call	_delay_ms	;wreg free
   506  0005BA                     l1473:
   507                           
   508                           ;adcon.c: 51: ADCON0bits.GO = 1;
   509  0005BA  82C2               	bsf	4034,1,c	;volatile
   510  0005BC                     l175:
   511  0005BC  B2C2               	btfsc	4034,1,c	;volatile
   512  0005BE  D7FE               	goto	l175
   513                           
   514                           ;adcon.c: 53: valor_AN0 = (ADRESH<<8) + ADRESL;
   515  0005C0  50C4               	movf	4036,w,c	;volatile
   516  0005C2  6E23               	movwf	(??_main+1)& (0+255),c
   517  0005C4  6A22               	clrf	??_main& (0+255),c
   518  0005C6  50C3               	movf	4035,w,c	;volatile
   519  0005C8  2422               	addwf	??_main,w,c
   520  0005CA  6E24               	movwf	_valor_AN0,c
   521  0005CC  0E00               	movlw	0
   522  0005CE  2023               	addwfc	??_main+1,w,c
   523  0005D0  6E25               	movwf	_valor_AN0+1,c
   524                           
   525                           ;adcon.c: 54: }
   526                           ;adcon.c: 55: PosicaoCursorLCD(2,1);
   527  0005D2  0E01               	movlw	1
   528  0005D4  6E04               	movwf	PosicaoCursorLCD@coluna,c
   529  0005D6  0E02               	movlw	2
   530  0005D8  EC5B  F004         	call	_PosicaoCursorLCD
   531                           
   532                           ;adcon.c: 56: EscreveFraseRamLCD(Texto_1);
   533  0005DC  0E38               	movlw	low _Texto_1
   534  0005DE  6E04               	movwf	EscreveFraseRamLCD@buffer,c
   535  0005E0  0E05               	movlw	high _Texto_1
   536  0005E2  6E05               	movwf	EscreveFraseRamLCD@buffer+1,c
   537  0005E4  ECB5  F004         	call	_EscreveFraseRamLCD	;wreg free
   538                           
   539                           ;adcon.c: 57: PosicaoCursorLCD(2,6);
   540  0005E8  0E06               	movlw	6
   541  0005EA  6E04               	movwf	PosicaoCursorLCD@coluna,c
   542  0005EC  0E02               	movlw	2
   543  0005EE  EC5B  F004         	call	_PosicaoCursorLCD
   544                           
   545                           ;adcon.c: 58: EscreveInteiroLCD(valor_AN0);
   546  0005F2  C024  F019         	movff	_valor_AN0,EscreveInteiroLCD@valor
   547  0005F6  C025  F01A         	movff	_valor_AN0+1,EscreveInteiroLCD@valor+1
   548  0005FA  EC20  F005         	call	_EscreveInteiroLCD	;wreg free
   549                           
   550                           ;adcon.c: 59: delay_ms(100);
   551  0005FE  0E00               	movlw	0
   552  000600  6E02               	movwf	delay_ms@delaytime+1,c
   553  000602  0E64               	movlw	100
   554  000604  6E01               	movwf	delay_ms@delaytime,c
   555  000606  EC59  F005         	call	_delay_ms	;wreg free
   556  00060A  D7D7               	goto	l1473
   557  00060C                     __end_of_main:
   558                           	opt stack 0
   559                           tblptru	equ	0xFF8
   560                           tblptrh	equ	0xFF7
   561                           tblptrl	equ	0xFF6
   562                           tablat	equ	0xFF5
   563                           postinc0	equ	0xFEE
   564                           wreg	equ	0xFE8
   565                           postdec1	equ	0xFE5
   566                           fsr1l	equ	0xFE1
   567                           
   568 ;; *************** function _delay_ms *****************
   569 ;; Defined at:
   570 ;;		line 15 in file "adcon.c"
   571 ;; Parameters:    Size  Location     Type
   572 ;;  delaytime       2    0[COMRAM] int 
   573 ;; Auto vars:     Size  Location     Type
   574 ;;		None
   575 ;; Return value:  Size  Location     Type
   576 ;;                  1    wreg      void 
   577 ;; Registers used:
   578 ;;		wreg, status,2, status,0
   579 ;; Tracked objects:
   580 ;;		On entry : 0/0
   581 ;;		On exit  : 0/0
   582 ;;		Unchanged: 0/0
   583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK4
   584 ;;      Params:         2       0       0       0
   585 ;;      Locals:         0       0       0       0
   586 ;;      Temps:          1       0       0       0
   587 ;;      Totals:         3       0       0       0
   588 ;;Total ram usage:        3 bytes
   589 ;; Hardware stack levels used:    1
   590 ;; This function calls:
   591 ;;		Nothing
   592 ;; This function is called by:
   593 ;;		_main
   594 ;; This function uses a non-reentrant model
   595 ;;
   596                           
   597                           	psect	text1
   598  000AB2                     __ptext1:
   599                           	opt stack 0
   600  000AB2                     _delay_ms:
   601                           	opt stack 30
   602                           
   603                           ;adcon.c: 17: while (--delaytime)
   604                           
   605                           ;incstack = 0
   606  000AB2  D009               	goto	l1425
   607  000AB4                     l1423:
   608                           
   609                           ;adcon.c: 18: {
   610                           ;adcon.c: 19: _delay((unsigned long)((1)*(48000000/4000.0)));
   611  000AB4  0E10               	movlw	16
   612  000AB6  6E03               	movwf	??_delay_ms& (0+255),c
   613  000AB8  0E94               	movlw	148
   614  000ABA                     u677:
   615  000ABA  2EE8               	decfsz	wreg,f,c
   616  000ABC  D7FE               	bra	u677
   617  000ABE  2E03               	decfsz	??_delay_ms& (0+255),f,c
   618  000AC0  D7FC               	bra	u677
   619  000AC2  F000 F000          	nop2	
   620  000AC6                     l1425:
   621  000AC6  0601               	decf	delay_ms@delaytime,f,c
   622  000AC8  A0D8               	btfss	status,0,c
   623  000ACA  0602               	decf	delay_ms@delaytime+1,f,c
   624  000ACC  5001               	movf	delay_ms@delaytime,w,c
   625  000ACE  1002               	iorwf	delay_ms@delaytime+1,w,c
   626  000AD0  B4D8               	btfsc	status,2,c
   627  000AD2  0012               	return	
   628  000AD4  D7EF               	goto	l1423
   629  000AD6                     __end_of_delay_ms:
   630                           	opt stack 0
   631                           tblptru	equ	0xFF8
   632                           tblptrh	equ	0xFF7
   633                           tblptrl	equ	0xFF6
   634                           tablat	equ	0xFF5
   635                           postinc0	equ	0xFEE
   636                           wreg	equ	0xFE8
   637                           postdec1	equ	0xFE5
   638                           fsr1l	equ	0xFE1
   639                           status	equ	0xFD8
   640                           
   641 ;; *************** function _PosicaoCursorLCD *****************
   642 ;; Defined at:
   643 ;;		line 280 in file "displayLCD.c"
   644 ;; Parameters:    Size  Location     Type
   645 ;;  linha           1    wreg     unsigned char 
   646 ;;  coluna          1    3[COMRAM] unsigned char 
   647 ;; Auto vars:     Size  Location     Type
   648 ;;  linha           1    4[COMRAM] unsigned char 
   649 ;;  EnderecoLCD     1    5[COMRAM] unsigned char 
   650 ;; Return value:  Size  Location     Type
   651 ;;                  1    wreg      void 
   652 ;; Registers used:
   653 ;;		wreg, status,2, status,0, cstack
   654 ;; Tracked objects:
   655 ;;		On entry : 0/0
   656 ;;		On exit  : 0/0
   657 ;;		Unchanged: 0/0
   658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK4
   659 ;;      Params:         1       0       0       0
   660 ;;      Locals:         2       0       0       0
   661 ;;      Temps:          0       0       0       0
   662 ;;      Totals:         3       0       0       0
   663 ;;Total ram usage:        3 bytes
   664 ;; Hardware stack levels used:    1
   665 ;; Hardware stack levels required when called:    2
   666 ;; This function calls:
   667 ;;		_EnderecoCursor
   668 ;; This function is called by:
   669 ;;		_main
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673                           	psect	text2
   674  0008B6                     __ptext2:
   675                           	opt stack 0
   676  0008B6                     _PosicaoCursorLCD:
   677                           	opt stack 28
   678                           
   679                           ;incstack = 0
   680                           ;PosicaoCursorLCD@linha stored from wreg
   681  0008B6  6E05               	movwf	PosicaoCursorLCD@linha,c
   682                           
   683                           ;displayLCD.c: 288: unsigned char EnderecoLCD = 0x00;
   684  0008B8  0E00               	movlw	0
   685  0008BA  6E06               	movwf	PosicaoCursorLCD@EnderecoLCD,c
   686                           
   687                           ;displayLCD.c: 292: if (coluna >= 0)
   688  0008BC  0604               	decf	PosicaoCursorLCD@coluna,f,c
   689                           
   690                           ;displayLCD.c: 293: {
   691                           ;displayLCD.c: 296: switch (linha)
   692  0008BE  D01E               	goto	l1411
   693  0008C0                     l70:
   694                           
   695                           ;displayLCD.c: 299: EnderecoLCD = 0x00 + coluna;
   696  0008C0  C004  F006         	movff	PosicaoCursorLCD@coluna,PosicaoCursorLCD@EnderecoLCD
   697                           
   698                           ;displayLCD.c: 300: EnderecoCursor(EnderecoLCD);
   699  0008C4  5006               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
   700  0008C6  EC26  F004         	call	_EnderecoCursor
   701                           
   702                           ;displayLCD.c: 301: break;
   703  0008CA  0012               	return	
   704  0008CC                     l1395:
   705                           
   706                           ;displayLCD.c: 304: EnderecoLCD = 0x40 + coluna;
   707  0008CC  5004               	movf	PosicaoCursorLCD@coluna,w,c
   708  0008CE  0F40               	addlw	64
   709  0008D0  6E06               	movwf	PosicaoCursorLCD@EnderecoLCD,c
   710                           
   711                           ;displayLCD.c: 305: EnderecoCursor(EnderecoLCD);
   712  0008D2  5006               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
   713  0008D4  EC26  F004         	call	_EnderecoCursor
   714                           
   715                           ;displayLCD.c: 306: break;
   716  0008D8  0012               	return	
   717  0008DA                     l1399:
   718                           
   719                           ;displayLCD.c: 309: EnderecoLCD = 0x14 + coluna;
   720  0008DA  5004               	movf	PosicaoCursorLCD@coluna,w,c
   721  0008DC  0F14               	addlw	20
   722  0008DE  6E06               	movwf	PosicaoCursorLCD@EnderecoLCD,c
   723                           
   724                           ;displayLCD.c: 310: EnderecoCursor(EnderecoLCD);
   725  0008E0  5006               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
   726  0008E2  EC26  F004         	call	_EnderecoCursor
   727                           
   728                           ;displayLCD.c: 311: break;
   729  0008E6  0012               	return	
   730  0008E8                     l1403:
   731                           
   732                           ;displayLCD.c: 314: EnderecoLCD = 0x54 + coluna;
   733  0008E8  5004               	movf	PosicaoCursorLCD@coluna,w,c
   734  0008EA  0F54               	addlw	84
   735  0008EC  6E06               	movwf	PosicaoCursorLCD@EnderecoLCD,c
   736                           
   737                           ;displayLCD.c: 315: EnderecoCursor(EnderecoLCD);
   738  0008EE  5006               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
   739  0008F0  EC26  F004         	call	_EnderecoCursor
   740                           
   741                           ;displayLCD.c: 316: break;
   742  0008F4  0012               	return	
   743  0008F6                     l1407:
   744                           
   745                           ;displayLCD.c: 319: EnderecoLCD = 0x00;
   746  0008F6  0E00               	movlw	0
   747  0008F8  6E06               	movwf	PosicaoCursorLCD@EnderecoLCD,c
   748                           
   749                           ;displayLCD.c: 321: }
   750                           
   751                           ;displayLCD.c: 320: break;
   752  0008FA  0012               	return	
   753  0008FC                     l1411:
   754  0008FC  5005               	movf	PosicaoCursorLCD@linha,w,c
   755                           
   756                           ; Switch size 1, requested type "space"
   757                           ; Number of cases is 4, Range of values is 1 to 4
   758                           ; switch strategies available:
   759                           ; Name         Instructions Cycles
   760                           ; simple_byte           13     7 (average)
   761                           ;	Chosen strategy is simple_byte
   762  0008FE  0A01               	xorlw	1	; case 1
   763  000900  B4D8               	btfsc	status,2,c
   764  000902  D7DE               	goto	l70
   765  000904  0A03               	xorlw	3	; case 2
   766  000906  B4D8               	btfsc	status,2,c
   767  000908  D7E1               	goto	l1395
   768  00090A  0A01               	xorlw	1	; case 3
   769  00090C  B4D8               	btfsc	status,2,c
   770  00090E  D7E5               	goto	l1399
   771  000910  0A07               	xorlw	7	; case 4
   772  000912  B4D8               	btfsc	status,2,c
   773  000914  D7E9               	goto	l1403
   774  000916  D7EF               	goto	l1407
   775  000918                     __end_of_PosicaoCursorLCD:
   776                           	opt stack 0
   777                           tblptru	equ	0xFF8
   778                           tblptrh	equ	0xFF7
   779                           tblptrl	equ	0xFF6
   780                           tablat	equ	0xFF5
   781                           postinc0	equ	0xFEE
   782                           wreg	equ	0xFE8
   783                           postdec1	equ	0xFE5
   784                           fsr1l	equ	0xFE1
   785                           status	equ	0xFD8
   786                           
   787 ;; *************** function _EnderecoCursor *****************
   788 ;; Defined at:
   789 ;;		line 229 in file "displayLCD.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;  endereco        1    wreg     unsigned char 
   792 ;; Auto vars:     Size  Location     Type
   793 ;;  endereco        1    2[COMRAM] unsigned char 
   794 ;; Return value:  Size  Location     Type
   795 ;;                  1    wreg      void 
   796 ;; Registers used:
   797 ;;		wreg, status,2, status,0, cstack
   798 ;; Tracked objects:
   799 ;;		On entry : 0/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK4
   803 ;;      Params:         0       0       0       0
   804 ;;      Locals:         1       0       0       0
   805 ;;      Temps:          0       0       0       0
   806 ;;      Totals:         1       0       0       0
   807 ;;Total ram usage:        1 bytes
   808 ;; Hardware stack levels used:    1
   809 ;; Hardware stack levels required when called:    1
   810 ;; This function calls:
   811 ;;		_Delay
   812 ;; This function is called by:
   813 ;;		_PosicaoCursorLCD
   814 ;;		_CriaCaractereLCD
   815 ;; This function uses a non-reentrant model
   816 ;;
   817                           
   818                           	psect	text3
   819  00084C                     __ptext3:
   820                           	opt stack 0
   821  00084C                     _EnderecoCursor:
   822                           	opt stack 28
   823                           
   824                           ;incstack = 0
   825                           ;EnderecoCursor@endereco stored from wreg
   826  00084C  6E03               	movwf	EnderecoCursor@endereco,c
   827                           
   828                           ;displayLCD.c: 232: PORTDbits.RD2 = 0;
   829  00084E  9483               	bcf	3971,2,c	;volatile
   830                           
   831                           ;displayLCD.c: 233: PORTDbits.RD1 = 0;
   832  000850  9283               	bcf	3971,1,c	;volatile
   833                           
   834                           ;displayLCD.c: 234: PORTDbits.RD0 = 0;
   835  000852  9083               	bcf	3971,0,c	;volatile
   836                           
   837                           ;displayLCD.c: 237: PORTDbits.RD7 = 1;
   838  000854  8E83               	bsf	3971,7,c	;volatile
   839                           
   840                           ;displayLCD.c: 238: if(endereco&0b00010000){PORTDbits.RD4=1;}
   841  000856  A803               	btfss	EnderecoCursor@endereco,4,c
   842  000858  D002               	goto	l51
   843  00085A  8883               	bsf	3971,4,c	;volatile
   844  00085C  D001               	goto	l1043
   845  00085E                     l51:
   846                           
   847                           ;displayLCD.c: 239: else {PORTDbits.RD4=0;}
   848  00085E  9883               	bcf	3971,4,c	;volatile
   849  000860                     l1043:
   850                           
   851                           ;displayLCD.c: 240: if(endereco&0b00100000){PORTDbits.RD5=1;}
   852  000860  AA03               	btfss	EnderecoCursor@endereco,5,c
   853  000862  D002               	goto	l53
   854  000864  8A83               	bsf	3971,5,c	;volatile
   855  000866  D001               	goto	l1047
   856  000868                     l53:
   857                           
   858                           ;displayLCD.c: 241: else {PORTDbits.RD5=0;}
   859  000868  9A83               	bcf	3971,5,c	;volatile
   860  00086A                     l1047:
   861                           
   862                           ;displayLCD.c: 242: if(endereco&0b01000000){PORTDbits.RD6=1;}
   863  00086A  AC03               	btfss	EnderecoCursor@endereco,6,c
   864  00086C  D002               	goto	l55
   865  00086E  8C83               	bsf	3971,6,c	;volatile
   866  000870  D001               	goto	l56
   867  000872                     l55:
   868                           
   869                           ;displayLCD.c: 243: else {PORTDbits.RD6=0;}
   870  000872  9C83               	bcf	3971,6,c	;volatile
   871  000874                     l56:
   872                           
   873                           ;displayLCD.c: 246: PORTDbits.RD0 = 1;
   874  000874  8083               	bsf	3971,0,c	;volatile
   875                           
   876                           ;displayLCD.c: 247: Delay();
   877  000876  EC6B  F005         	call	_Delay	;wreg free
   878                           
   879                           ;displayLCD.c: 248: PORTDbits.RD0 = 0;
   880  00087A  9083               	bcf	3971,0,c	;volatile
   881                           
   882                           ;displayLCD.c: 249: Delay();
   883  00087C  EC6B  F005         	call	_Delay	;wreg free
   884                           
   885                           ;displayLCD.c: 252: if(endereco&0b00000001){PORTDbits.RD4=1;}
   886  000880  A003               	btfss	EnderecoCursor@endereco,0,c
   887  000882  D002               	goto	l57
   888  000884  8883               	bsf	3971,4,c	;volatile
   889  000886  D001               	goto	l58
   890  000888                     l57:
   891                           
   892                           ;displayLCD.c: 253: else {PORTDbits.RD4=0;}
   893  000888  9883               	bcf	3971,4,c	;volatile
   894  00088A                     l58:
   895                           
   896                           ;displayLCD.c: 254: if(endereco&0b00000010){PORTDbits.RD5=1;}
   897  00088A  A203               	btfss	EnderecoCursor@endereco,1,c
   898  00088C  D002               	goto	l59
   899  00088E  8A83               	bsf	3971,5,c	;volatile
   900  000890  D001               	goto	l60
   901  000892                     l59:
   902                           
   903                           ;displayLCD.c: 255: else {PORTDbits.RD5=0;}
   904  000892  9A83               	bcf	3971,5,c	;volatile
   905  000894                     l60:
   906                           
   907                           ;displayLCD.c: 256: if(endereco&0b00000100){PORTDbits.RD6=1;}
   908  000894  A403               	btfss	EnderecoCursor@endereco,2,c
   909  000896  D002               	goto	l61
   910  000898  8C83               	bsf	3971,6,c	;volatile
   911  00089A  D001               	goto	l62
   912  00089C                     l61:
   913                           
   914                           ;displayLCD.c: 257: else {PORTDbits.RD6=0;}
   915  00089C  9C83               	bcf	3971,6,c	;volatile
   916  00089E                     l62:
   917                           
   918                           ;displayLCD.c: 258: if(endereco&0b00001000){PORTDbits.RD7=1;}
   919  00089E  A603               	btfss	EnderecoCursor@endereco,3,c
   920  0008A0  D002               	goto	l63
   921  0008A2  8E83               	bsf	3971,7,c	;volatile
   922  0008A4  D001               	goto	l64
   923  0008A6                     l63:
   924                           
   925                           ;displayLCD.c: 259: else {PORTDbits.RD7=0;}
   926  0008A6  9E83               	bcf	3971,7,c	;volatile
   927  0008A8                     l64:
   928                           
   929                           ;displayLCD.c: 262: PORTDbits.RD0 = 1;
   930  0008A8  8083               	bsf	3971,0,c	;volatile
   931                           
   932                           ;displayLCD.c: 263: Delay();
   933  0008AA  EC6B  F005         	call	_Delay	;wreg free
   934                           
   935                           ;displayLCD.c: 264: PORTDbits.RD0 = 0;
   936  0008AE  9083               	bcf	3971,0,c	;volatile
   937                           
   938                           ;displayLCD.c: 265: Delay();
   939  0008B0  EC6B  F005         	call	_Delay	;wreg free
   940  0008B4  0012               	return		;funcret
   941  0008B6                     __end_of_EnderecoCursor:
   942                           	opt stack 0
   943                           tblptru	equ	0xFF8
   944                           tblptrh	equ	0xFF7
   945                           tblptrl	equ	0xFF6
   946                           tablat	equ	0xFF5
   947                           postinc0	equ	0xFEE
   948                           wreg	equ	0xFE8
   949                           postdec1	equ	0xFE5
   950                           fsr1l	equ	0xFE1
   951                           status	equ	0xFD8
   952                           
   953 ;; *************** function _EscreveInteiroLCD *****************
   954 ;; Defined at:
   955 ;;		line 391 in file "displayLCD.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;  valor           2   24[COMRAM] int 
   958 ;; Auto vars:     Size  Location     Type
   959 ;;  texto           7   26[COMRAM] unsigned char [7]
   960 ;; Return value:  Size  Location     Type
   961 ;;                  1    wreg      void 
   962 ;; Registers used:
   963 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   964 ;; Tracked objects:
   965 ;;		On entry : 0/0
   966 ;;		On exit  : 0/0
   967 ;;		Unchanged: 0/0
   968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK4
   969 ;;      Params:         2       0       0       0
   970 ;;      Locals:         7       0       0       0
   971 ;;      Temps:          0       0       0       0
   972 ;;      Totals:         9       0       0       0
   973 ;;Total ram usage:        9 bytes
   974 ;; Hardware stack levels used:    1
   975 ;; Hardware stack levels required when called:    3
   976 ;; This function calls:
   977 ;;		_EscreveFraseRamLCD
   978 ;;		_itoa
   979 ;; This function is called by:
   980 ;;		_main
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           	psect	text4
   985  000A40                     __ptext4:
   986                           	opt stack 0
   987  000A40                     _EscreveInteiroLCD:
   988                           	opt stack 27
   989                           
   990                           ;displayLCD.c: 393: char texto[7] = "000000";
   991                           
   992                           ;incstack = 0
   993  000A40  EE20  F037         	lfsr	2,EscreveInteiroLCD@F3290
   994  000A44  EE10  F01B         	lfsr	1,EscreveInteiroLCD@texto
   995  000A48  0E06               	movlw	6
   996  000A4A                     u641:
   997  000A4A  CFDB FFE3          	movff	plusw2,plusw1
   998  000A4E  06E8               	decf	wreg,f,c
   999  000A50  E2FC               	bc	u641
  1000                           
  1001                           ;displayLCD.c: 394: itoa(texto,valor, 10);
  1002  000A52  0E1B               	movlw	low EscreveInteiroLCD@texto
  1003  000A54  6E11               	movwf	itoa@buf,c
  1004  000A56  0E00               	movlw	high EscreveInteiroLCD@texto
  1005  000A58  6E12               	movwf	itoa@buf+1,c
  1006  000A5A  C019  F013         	movff	EscreveInteiroLCD@valor,itoa@val
  1007  000A5E  C01A  F014         	movff	EscreveInteiroLCD@valor+1,itoa@val+1
  1008  000A62  0E00               	movlw	0
  1009  000A64  6E16               	movwf	itoa@base+1,c
  1010  000A66  0E0A               	movlw	10
  1011  000A68  6E15               	movwf	itoa@base,c
  1012  000A6A  ECDE  F004         	call	_itoa	;wreg free
  1013                           
  1014                           ;displayLCD.c: 395: EscreveFraseRamLCD(texto);
  1015  000A6E  0E1B               	movlw	low EscreveInteiroLCD@texto
  1016  000A70  6E04               	movwf	EscreveFraseRamLCD@buffer,c
  1017  000A72  0E00               	movlw	high EscreveInteiroLCD@texto
  1018  000A74  6E05               	movwf	EscreveFraseRamLCD@buffer+1,c
  1019  000A76  ECB5  F004         	call	_EscreveFraseRamLCD	;wreg free
  1020  000A7A  0012               	return		;funcret
  1021  000A7C                     __end_of_EscreveInteiroLCD:
  1022                           	opt stack 0
  1023                           tblptru	equ	0xFF8
  1024                           tblptrh	equ	0xFF7
  1025                           tblptrl	equ	0xFF6
  1026                           tablat	equ	0xFF5
  1027                           postinc0	equ	0xFEE
  1028                           wreg	equ	0xFE8
  1029                           postdec1	equ	0xFE5
  1030                           plusw1	equ	0xFE3
  1031                           fsr1l	equ	0xFE1
  1032                           plusw2	equ	0xFDB
  1033                           status	equ	0xFD8
  1034                           
  1035 ;; *************** function _itoa *****************
  1036 ;; Defined at:
  1037 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\itoa.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;  buf             2   16[COMRAM] PTR unsigned char 
  1040 ;;		 -> EscreveInteiroLCD@texto(7), 
  1041 ;;  val             2   18[COMRAM] int 
  1042 ;;  base            2   20[COMRAM] int 
  1043 ;; Auto vars:     Size  Location     Type
  1044 ;;  cp              2   22[COMRAM] PTR unsigned char 
  1045 ;;		 -> EscreveInteiroLCD@texto(7), 
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  2   16[COMRAM] PTR unsigned char 
  1048 ;; Registers used:
  1049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1050 ;; Tracked objects:
  1051 ;;		On entry : 0/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK4
  1055 ;;      Params:         6       0       0       0
  1056 ;;      Locals:         2       0       0       0
  1057 ;;      Temps:          0       0       0       0
  1058 ;;      Totals:         8       0       0       0
  1059 ;;Total ram usage:        8 bytes
  1060 ;; Hardware stack levels used:    1
  1061 ;; Hardware stack levels required when called:    2
  1062 ;; This function calls:
  1063 ;;		_utoa
  1064 ;; This function is called by:
  1065 ;;		_EscreveInteiroLCD
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           	psect	text5
  1070  0009BC                     __ptext5:
  1071                           	opt stack 0
  1072  0009BC                     _itoa:
  1073                           	opt stack 27
  1074                           
  1075                           ;incstack = 0
  1076  0009BC  C011  F017         	movff	itoa@buf,itoa@cp
  1077  0009C0  C012  F018         	movff	itoa@buf+1,itoa@cp+1
  1078  0009C4  AE14               	btfss	itoa@val+1,7,c
  1079  0009C6  D00C               	goto	l1377
  1080  0009C8  C011  FFD9         	movff	itoa@buf,fsr2l
  1081  0009CC  C012  FFDA         	movff	itoa@buf+1,fsr2h
  1082  0009D0  0E2D               	movlw	45
  1083  0009D2  6EDF               	movwf	indf2,c
  1084  0009D4  4A11               	infsnz	itoa@buf,f,c
  1085  0009D6  2A12               	incf	itoa@buf+1,f,c
  1086  0009D8  6C13               	negf	itoa@val,c
  1087  0009DA  1E14               	comf	itoa@val+1,f,c
  1088  0009DC  B0D8               	btfsc	status,0,c
  1089  0009DE  2A14               	incf	itoa@val+1,f,c
  1090  0009E0                     l1377:
  1091  0009E0  C011  F008         	movff	itoa@buf,utoa@buf
  1092  0009E4  C012  F009         	movff	itoa@buf+1,utoa@buf+1
  1093  0009E8  C013  F00A         	movff	itoa@val,utoa@val
  1094  0009EC  C014  F00B         	movff	itoa@val+1,utoa@val+1
  1095  0009F0  C015  F00C         	movff	itoa@base,utoa@base
  1096  0009F4  C016  F00D         	movff	itoa@base+1,utoa@base+1
  1097  0009F8  EC06  F003         	call	_utoa	;wreg free
  1098  0009FC  0012               	return	
  1099  0009FE                     __end_of_itoa:
  1100                           	opt stack 0
  1101                           tblptru	equ	0xFF8
  1102                           tblptrh	equ	0xFF7
  1103                           tblptrl	equ	0xFF6
  1104                           tablat	equ	0xFF5
  1105                           postinc0	equ	0xFEE
  1106                           wreg	equ	0xFE8
  1107                           postdec1	equ	0xFE5
  1108                           plusw1	equ	0xFE3
  1109                           fsr1l	equ	0xFE1
  1110                           indf2	equ	0xFDF
  1111                           plusw2	equ	0xFDB
  1112                           fsr2h	equ	0xFDA
  1113                           fsr2l	equ	0xFD9
  1114                           status	equ	0xFD8
  1115                           
  1116 ;; *************** function _utoa *****************
  1117 ;; Defined at:
  1118 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\itoa.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;  buf             2    7[COMRAM] PTR unsigned char 
  1121 ;;		 -> EscreveInteiroLCD@texto(7), 
  1122 ;;  val             2    9[COMRAM] unsigned int 
  1123 ;;  base            2   11[COMRAM] int 
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;  v               2   13[COMRAM] unsigned int 
  1126 ;;  c               1   15[COMRAM] unsigned char 
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  2    7[COMRAM] PTR unsigned char 
  1129 ;; Registers used:
  1130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK4
  1136 ;;      Params:         6       0       0       0
  1137 ;;      Locals:         3       0       0       0
  1138 ;;      Temps:          0       0       0       0
  1139 ;;      Totals:         9       0       0       0
  1140 ;;Total ram usage:        9 bytes
  1141 ;; Hardware stack levels used:    1
  1142 ;; Hardware stack levels required when called:    1
  1143 ;; This function calls:
  1144 ;;		___lwdiv
  1145 ;;		___lwmod
  1146 ;; This function is called by:
  1147 ;;		_itoa
  1148 ;; This function uses a non-reentrant model
  1149 ;;
  1150                           
  1151                           	psect	text6
  1152  00060C                     __ptext6:
  1153                           	opt stack 0
  1154  00060C                     _utoa:
  1155                           	opt stack 27
  1156                           
  1157                           ;incstack = 0
  1158  00060C  C00A  F00E         	movff	utoa@val,utoa@v
  1159  000610  C00B  F00F         	movff	utoa@val+1,utoa@v+1
  1160  000614                     l1341:
  1161  000614  C00E  F001         	movff	utoa@v,___lwdiv@dividend
  1162  000618  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
  1163  00061C  C00C  F003         	movff	utoa@base,___lwdiv@divisor
  1164  000620  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
  1165  000624  EC8C  F004         	call	___lwdiv	;wreg free
  1166  000628  C001  F00E         	movff	?___lwdiv,utoa@v
  1167  00062C  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
  1168  000630  4A08               	infsnz	utoa@buf,f,c
  1169  000632  2A09               	incf	utoa@buf+1,f,c
  1170  000634  500E               	movf	utoa@v,w,c
  1171  000636  100F               	iorwf	utoa@v+1,w,c
  1172  000638  A4D8               	btfss	status,2,c
  1173  00063A  D7EC               	goto	l1341
  1174  00063C  C008  FFD9         	movff	utoa@buf,fsr2l
  1175  000640  C009  FFDA         	movff	utoa@buf+1,fsr2h
  1176  000644  0E00               	movlw	0
  1177  000646  6EDF               	movwf	indf2,c
  1178  000648  0608               	decf	utoa@buf,f,c
  1179  00064A  A0D8               	btfss	status,0,c
  1180  00064C  0609               	decf	utoa@buf+1,f,c
  1181  00064E                     l1351:
  1182  00064E  C00A  F001         	movff	utoa@val,___lwmod@dividend
  1183  000652  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
  1184  000656  C00C  F003         	movff	utoa@base,___lwmod@divisor
  1185  00065A  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
  1186  00065E  ECFF  F004         	call	___lwmod	;wreg free
  1187  000662  5001               	movf	?___lwmod,w,c
  1188  000664  6E10               	movwf	utoa@c,c
  1189  000666  C00A  F001         	movff	utoa@val,___lwdiv@dividend
  1190  00066A  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
  1191  00066E  C00C  F003         	movff	utoa@base,___lwdiv@divisor
  1192  000672  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
  1193  000676  EC8C  F004         	call	___lwdiv	;wreg free
  1194  00067A  C001  F00A         	movff	?___lwdiv,utoa@val
  1195  00067E  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
  1196  000682  0E09               	movlw	9
  1197  000684  6410               	cpfsgt	utoa@c,c
  1198  000686  D002               	goto	l579
  1199  000688  0E07               	movlw	7
  1200  00068A  2610               	addwf	utoa@c,f,c
  1201  00068C                     l579:
  1202  00068C  0E30               	movlw	48
  1203  00068E  2610               	addwf	utoa@c,f,c
  1204  000690  C008  FFD9         	movff	utoa@buf,fsr2l
  1205  000694  C009  FFDA         	movff	utoa@buf+1,fsr2h
  1206  000698  C010  FFDF         	movff	utoa@c,indf2
  1207  00069C  0608               	decf	utoa@buf,f,c
  1208  00069E  A0D8               	btfss	status,0,c
  1209  0006A0  0609               	decf	utoa@buf+1,f,c
  1210  0006A2  500A               	movf	utoa@val,w,c
  1211  0006A4  100B               	iorwf	utoa@val+1,w,c
  1212  0006A6  A4D8               	btfss	status,2,c
  1213  0006A8  D7D2               	goto	l1351
  1214                           
  1215                           ;	Return value of _utoa is never used
  1216  0006AA  4A08               	infsnz	utoa@buf,f,c
  1217  0006AC  2A09               	incf	utoa@buf+1,f,c
  1218  0006AE  0012               	return	
  1219  0006B0                     __end_of_utoa:
  1220                           	opt stack 0
  1221                           tblptru	equ	0xFF8
  1222                           tblptrh	equ	0xFF7
  1223                           tblptrl	equ	0xFF6
  1224                           tablat	equ	0xFF5
  1225                           postinc0	equ	0xFEE
  1226                           wreg	equ	0xFE8
  1227                           postdec1	equ	0xFE5
  1228                           plusw1	equ	0xFE3
  1229                           fsr1l	equ	0xFE1
  1230                           indf2	equ	0xFDF
  1231                           plusw2	equ	0xFDB
  1232                           fsr2h	equ	0xFDA
  1233                           fsr2l	equ	0xFD9
  1234                           status	equ	0xFD8
  1235                           
  1236 ;; *************** function ___lwmod *****************
  1237 ;; Defined at:
  1238 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lwmod.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;  dividend        2    0[COMRAM] unsigned int 
  1241 ;;  divisor         2    2[COMRAM] unsigned int 
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;  counter         1    4[COMRAM] unsigned char 
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  2    0[COMRAM] unsigned int 
  1246 ;; Registers used:
  1247 ;;		wreg, status,2, status,0
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK4
  1253 ;;      Params:         4       0       0       0
  1254 ;;      Locals:         1       0       0       0
  1255 ;;      Temps:          0       0       0       0
  1256 ;;      Totals:         5       0       0       0
  1257 ;;Total ram usage:        5 bytes
  1258 ;; Hardware stack levels used:    1
  1259 ;; This function calls:
  1260 ;;		Nothing
  1261 ;; This function is called by:
  1262 ;;		_utoa
  1263 ;; This function uses a non-reentrant model
  1264 ;;
  1265                           
  1266                           	psect	text7
  1267  0009FE                     __ptext7:
  1268                           	opt stack 0
  1269  0009FE                     ___lwmod:
  1270                           	opt stack 27
  1271                           
  1272                           ;incstack = 0
  1273  0009FE  5003               	movf	___lwmod@divisor,w,c
  1274  000A00  1004               	iorwf	___lwmod@divisor+1,w,c
  1275  000A02  B4D8               	btfsc	status,2,c
  1276  000A04  D018               	goto	l668
  1277  000A06  0E01               	movlw	1
  1278  000A08  6E05               	movwf	___lwmod@counter,c
  1279  000A0A  D004               	goto	l1329
  1280  000A0C                     l1327:
  1281  000A0C  90D8               	bcf	status,0,c
  1282  000A0E  3603               	rlcf	___lwmod@divisor,f,c
  1283  000A10  3604               	rlcf	___lwmod@divisor+1,f,c
  1284  000A12  2A05               	incf	___lwmod@counter,f,c
  1285  000A14                     l1329:
  1286  000A14  AE04               	btfss	___lwmod@divisor+1,7,c
  1287  000A16  D7FA               	goto	l1327
  1288  000A18                     l1331:
  1289  000A18  5003               	movf	___lwmod@divisor,w,c
  1290  000A1A  5C01               	subwf	___lwmod@dividend,w,c
  1291  000A1C  5004               	movf	___lwmod@divisor+1,w,c
  1292  000A1E  5802               	subwfb	___lwmod@dividend+1,w,c
  1293  000A20  A0D8               	btfss	status,0,c
  1294  000A22  D004               	goto	l1335
  1295  000A24  5003               	movf	___lwmod@divisor,w,c
  1296  000A26  5E01               	subwf	___lwmod@dividend,f,c
  1297  000A28  5004               	movf	___lwmod@divisor+1,w,c
  1298  000A2A  5A02               	subwfb	___lwmod@dividend+1,f,c
  1299  000A2C                     l1335:
  1300  000A2C  90D8               	bcf	status,0,c
  1301  000A2E  3204               	rrcf	___lwmod@divisor+1,f,c
  1302  000A30  3203               	rrcf	___lwmod@divisor,f,c
  1303  000A32  2E05               	decfsz	___lwmod@counter,f,c
  1304  000A34  D7F1               	goto	l1331
  1305  000A36                     l668:
  1306  000A36  C001  F001         	movff	___lwmod@dividend,?___lwmod
  1307  000A3A  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  1308  000A3E  0012               	return		;funcret
  1309  000A40                     __end_of___lwmod:
  1310                           	opt stack 0
  1311                           tblptru	equ	0xFF8
  1312                           tblptrh	equ	0xFF7
  1313                           tblptrl	equ	0xFF6
  1314                           tablat	equ	0xFF5
  1315                           postinc0	equ	0xFEE
  1316                           wreg	equ	0xFE8
  1317                           postdec1	equ	0xFE5
  1318                           plusw1	equ	0xFE3
  1319                           fsr1l	equ	0xFE1
  1320                           indf2	equ	0xFDF
  1321                           plusw2	equ	0xFDB
  1322                           fsr2h	equ	0xFDA
  1323                           fsr2l	equ	0xFD9
  1324                           status	equ	0xFD8
  1325                           
  1326 ;; *************** function ___lwdiv *****************
  1327 ;; Defined at:
  1328 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lwdiv.c"
  1329 ;; Parameters:    Size  Location     Type
  1330 ;;  dividend        2    0[COMRAM] unsigned int 
  1331 ;;  divisor         2    2[COMRAM] unsigned int 
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;  quotient        2    4[COMRAM] unsigned int 
  1334 ;;  counter         1    6[COMRAM] unsigned char 
  1335 ;; Return value:  Size  Location     Type
  1336 ;;                  2    0[COMRAM] unsigned int 
  1337 ;; Registers used:
  1338 ;;		wreg, status,2, status,0
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK4
  1344 ;;      Params:         4       0       0       0
  1345 ;;      Locals:         3       0       0       0
  1346 ;;      Temps:          0       0       0       0
  1347 ;;      Totals:         7       0       0       0
  1348 ;;Total ram usage:        7 bytes
  1349 ;; Hardware stack levels used:    1
  1350 ;; This function calls:
  1351 ;;		Nothing
  1352 ;; This function is called by:
  1353 ;;		_utoa
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           	psect	text8
  1358  000918                     __ptext8:
  1359                           	opt stack 0
  1360  000918                     ___lwdiv:
  1361                           	opt stack 27
  1362                           
  1363                           ;incstack = 0
  1364  000918  0E00               	movlw	0
  1365  00091A  6E06               	movwf	___lwdiv@quotient+1,c
  1366  00091C  0E00               	movlw	0
  1367  00091E  6E05               	movwf	___lwdiv@quotient,c
  1368  000920  5003               	movf	___lwdiv@divisor,w,c
  1369  000922  1004               	iorwf	___lwdiv@divisor+1,w,c
  1370  000924  B4D8               	btfsc	status,2,c
  1371  000926  D01C               	goto	l658
  1372  000928  0E01               	movlw	1
  1373  00092A  6E07               	movwf	___lwdiv@counter,c
  1374  00092C  D004               	goto	l1309
  1375  00092E                     l1307:
  1376  00092E  90D8               	bcf	status,0,c
  1377  000930  3603               	rlcf	___lwdiv@divisor,f,c
  1378  000932  3604               	rlcf	___lwdiv@divisor+1,f,c
  1379  000934  2A07               	incf	___lwdiv@counter,f,c
  1380  000936                     l1309:
  1381  000936  AE04               	btfss	___lwdiv@divisor+1,7,c
  1382  000938  D7FA               	goto	l1307
  1383  00093A                     l1311:
  1384  00093A  90D8               	bcf	status,0,c
  1385  00093C  3605               	rlcf	___lwdiv@quotient,f,c
  1386  00093E  3606               	rlcf	___lwdiv@quotient+1,f,c
  1387  000940  5003               	movf	___lwdiv@divisor,w,c
  1388  000942  5C01               	subwf	___lwdiv@dividend,w,c
  1389  000944  5004               	movf	___lwdiv@divisor+1,w,c
  1390  000946  5802               	subwfb	___lwdiv@dividend+1,w,c
  1391  000948  A0D8               	btfss	status,0,c
  1392  00094A  D005               	goto	l1319
  1393  00094C  5003               	movf	___lwdiv@divisor,w,c
  1394  00094E  5E01               	subwf	___lwdiv@dividend,f,c
  1395  000950  5004               	movf	___lwdiv@divisor+1,w,c
  1396  000952  5A02               	subwfb	___lwdiv@dividend+1,f,c
  1397  000954  8005               	bsf	___lwdiv@quotient,0,c
  1398  000956                     l1319:
  1399  000956  90D8               	bcf	status,0,c
  1400  000958  3204               	rrcf	___lwdiv@divisor+1,f,c
  1401  00095A  3203               	rrcf	___lwdiv@divisor,f,c
  1402  00095C  2E07               	decfsz	___lwdiv@counter,f,c
  1403  00095E  D7ED               	goto	l1311
  1404  000960                     l658:
  1405  000960  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1406  000964  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1407  000968  0012               	return		;funcret
  1408  00096A                     __end_of___lwdiv:
  1409                           	opt stack 0
  1410                           tblptru	equ	0xFF8
  1411                           tblptrh	equ	0xFF7
  1412                           tblptrl	equ	0xFF6
  1413                           tablat	equ	0xFF5
  1414                           postinc0	equ	0xFEE
  1415                           wreg	equ	0xFE8
  1416                           postdec1	equ	0xFE5
  1417                           plusw1	equ	0xFE3
  1418                           fsr1l	equ	0xFE1
  1419                           indf2	equ	0xFDF
  1420                           plusw2	equ	0xFDB
  1421                           fsr2h	equ	0xFDA
  1422                           fsr2l	equ	0xFD9
  1423                           status	equ	0xFD8
  1424                           
  1425 ;; *************** function _EscreveFraseRamLCD *****************
  1426 ;; Defined at:
  1427 ;;		line 438 in file "displayLCD.c"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;  buffer          2    3[COMRAM] PTR unsigned char 
  1430 ;;		 -> Texto_1(7), Texto_0(15), EscreveInteiroLCD@texto(7), 
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;		None
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  1    wreg      void 
  1435 ;; Registers used:
  1436 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK4
  1442 ;;      Params:         2       0       0       0
  1443 ;;      Locals:         0       0       0       0
  1444 ;;      Temps:          0       0       0       0
  1445 ;;      Totals:         2       0       0       0
  1446 ;;Total ram usage:        2 bytes
  1447 ;; Hardware stack levels used:    1
  1448 ;; Hardware stack levels required when called:    2
  1449 ;; This function calls:
  1450 ;;		_EscreveCaractereLCD
  1451 ;; This function is called by:
  1452 ;;		_EscreveInteiroLCD
  1453 ;;		_main
  1454 ;; This function uses a non-reentrant model
  1455 ;;
  1456                           
  1457                           	psect	text9
  1458  00096A                     __ptext9:
  1459                           	opt stack 0
  1460  00096A                     _EscreveFraseRamLCD:
  1461                           	opt stack 27
  1462                           
  1463                           ;displayLCD.c: 440: while(*buffer)
  1464                           
  1465                           ;incstack = 0
  1466  00096A  D014               	goto	l1387
  1467  00096C                     l1383:
  1468                           
  1469                           ;displayLCD.c: 441: {
  1470                           ;displayLCD.c: 442: EscreveCaractereLCD(*buffer);
  1471  00096C  C004  FFF6         	movff	EscreveFraseRamLCD@buffer,tblptrl
  1472  000970  C005  FFF7         	movff	EscreveFraseRamLCD@buffer+1,tblptrh
  1473  000974  6AF8               	clrf	tblptru,c
  1474  000976  0E04               	movlw	(high __ramtop+-1)
  1475  000978  64F7               	cpfsgt	tblptrh,c
  1476  00097A  D003               	bra	u617
  1477  00097C  0008               	tblrd		*
  1478  00097E  50F5               	movf	tablat,w,c
  1479  000980  D005               	bra	u610
  1480  000982                     u617:
  1481  000982  CFF6 FFE9          	movff	tblptrl,fsr0l
  1482  000986  CFF7 FFEA          	movff	tblptrh,fsr0h
  1483  00098A  50EF               	movf	indf0,w,c
  1484  00098C                     u610:
  1485  00098C  ECED  F003         	call	_EscreveCaractereLCD
  1486                           
  1487                           ;displayLCD.c: 443: buffer++;
  1488  000990  4A04               	infsnz	EscreveFraseRamLCD@buffer,f,c
  1489  000992  2A05               	incf	EscreveFraseRamLCD@buffer+1,f,c
  1490  000994                     l1387:
  1491  000994  C004  FFF6         	movff	EscreveFraseRamLCD@buffer,tblptrl
  1492  000998  C005  FFF7         	movff	EscreveFraseRamLCD@buffer+1,tblptrh
  1493  00099C  6AF8               	clrf	tblptru,c
  1494  00099E  0E04               	movlw	(high __ramtop+-1)
  1495  0009A0  64F7               	cpfsgt	tblptrh,c
  1496  0009A2  D003               	bra	u627
  1497  0009A4  0008               	tblrd		*
  1498  0009A6  50F5               	movf	tablat,w,c
  1499  0009A8  D005               	bra	u620
  1500  0009AA                     u627:
  1501  0009AA  CFF6 FFE9          	movff	tblptrl,fsr0l
  1502  0009AE  CFF7 FFEA          	movff	tblptrh,fsr0h
  1503  0009B2  50EF               	movf	indf0,w,c
  1504  0009B4                     u620:
  1505  0009B4  0900               	iorlw	0
  1506  0009B6  B4D8               	btfsc	status,2,c
  1507  0009B8  0012               	return	
  1508  0009BA  D7D8               	goto	l1383
  1509  0009BC                     __end_of_EscreveFraseRamLCD:
  1510                           	opt stack 0
  1511                           tblptru	equ	0xFF8
  1512                           tblptrh	equ	0xFF7
  1513                           tblptrl	equ	0xFF6
  1514                           tablat	equ	0xFF5
  1515                           indf0	equ	0xFEF
  1516                           postinc0	equ	0xFEE
  1517                           fsr0h	equ	0xFEA
  1518                           fsr0l	equ	0xFE9
  1519                           wreg	equ	0xFE8
  1520                           postdec1	equ	0xFE5
  1521                           plusw1	equ	0xFE3
  1522                           fsr1l	equ	0xFE1
  1523                           indf2	equ	0xFDF
  1524                           plusw2	equ	0xFDB
  1525                           fsr2h	equ	0xFDA
  1526                           fsr2l	equ	0xFD9
  1527                           status	equ	0xFD8
  1528                           
  1529 ;; *************** function _EscreveCaractereLCD *****************
  1530 ;; Defined at:
  1531 ;;		line 339 in file "displayLCD.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;  data            1    wreg     unsigned char 
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;  data            1    2[COMRAM] unsigned char 
  1536 ;; Return value:  Size  Location     Type
  1537 ;;                  1    wreg      void 
  1538 ;; Registers used:
  1539 ;;		wreg, status,2, status,0, cstack
  1540 ;; Tracked objects:
  1541 ;;		On entry : 0/0
  1542 ;;		On exit  : 0/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK4
  1545 ;;      Params:         0       0       0       0
  1546 ;;      Locals:         1       0       0       0
  1547 ;;      Temps:          0       0       0       0
  1548 ;;      Totals:         1       0       0       0
  1549 ;;Total ram usage:        1 bytes
  1550 ;; Hardware stack levels used:    1
  1551 ;; Hardware stack levels required when called:    1
  1552 ;; This function calls:
  1553 ;;		_Delay
  1554 ;; This function is called by:
  1555 ;;		_EscreveFraseRamLCD
  1556 ;;		_EscreveFloatLCD
  1557 ;;		_EscreveFraseLCD
  1558 ;;		_CriaCaractereLCD
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562                           	psect	text10
  1563  0007DA                     __ptext10:
  1564                           	opt stack 0
  1565  0007DA                     _EscreveCaractereLCD:
  1566                           	opt stack 27
  1567                           
  1568                           ;incstack = 0
  1569                           ;EscreveCaractereLCD@data stored from wreg
  1570  0007DA  6E03               	movwf	EscreveCaractereLCD@data,c
  1571                           
  1572                           ;displayLCD.c: 342: PORTDbits.RD2 = 0;
  1573  0007DC  9483               	bcf	3971,2,c	;volatile
  1574                           
  1575                           ;displayLCD.c: 343: PORTDbits.RD1 = 1;
  1576  0007DE  8283               	bsf	3971,1,c	;volatile
  1577                           
  1578                           ;displayLCD.c: 344: PORTDbits.RD0 = 0;
  1579  0007E0  9083               	bcf	3971,0,c	;volatile
  1580                           
  1581                           ;displayLCD.c: 347: if(data&0b00010000){PORTDbits.RD4=1;}
  1582  0007E2  A803               	btfss	EscreveCaractereLCD@data,4,c
  1583  0007E4  D002               	goto	l80
  1584  0007E6  8883               	bsf	3971,4,c	;volatile
  1585  0007E8  D001               	goto	l933
  1586  0007EA                     l80:
  1587                           
  1588                           ;displayLCD.c: 348: else {PORTDbits.RD4=0;}
  1589  0007EA  9883               	bcf	3971,4,c	;volatile
  1590  0007EC                     l933:
  1591                           
  1592                           ;displayLCD.c: 349: if(data&0b00100000){PORTDbits.RD5=1;}
  1593  0007EC  AA03               	btfss	EscreveCaractereLCD@data,5,c
  1594  0007EE  D002               	goto	l82
  1595  0007F0  8A83               	bsf	3971,5,c	;volatile
  1596  0007F2  D001               	goto	l937
  1597  0007F4                     l82:
  1598                           
  1599                           ;displayLCD.c: 350: else {PORTDbits.RD5=0;}
  1600  0007F4  9A83               	bcf	3971,5,c	;volatile
  1601  0007F6                     l937:
  1602                           
  1603                           ;displayLCD.c: 351: if(data&0b01000000){PORTDbits.RD6=1;}
  1604  0007F6  AC03               	btfss	EscreveCaractereLCD@data,6,c
  1605  0007F8  D002               	goto	l84
  1606  0007FA  8C83               	bsf	3971,6,c	;volatile
  1607  0007FC  D001               	goto	l941
  1608  0007FE                     l84:
  1609                           
  1610                           ;displayLCD.c: 352: else {PORTDbits.RD6=0;}
  1611  0007FE  9C83               	bcf	3971,6,c	;volatile
  1612  000800                     l941:
  1613                           
  1614                           ;displayLCD.c: 353: if(data&0b10000000){PORTDbits.RD7=1;}
  1615  000800  AE03               	btfss	EscreveCaractereLCD@data,7,c
  1616  000802  D002               	goto	l86
  1617  000804  8E83               	bsf	3971,7,c	;volatile
  1618  000806  D001               	goto	l87
  1619  000808                     l86:
  1620                           
  1621                           ;displayLCD.c: 354: else {PORTDbits.RD7=0;}
  1622  000808  9E83               	bcf	3971,7,c	;volatile
  1623  00080A                     l87:
  1624                           
  1625                           ;displayLCD.c: 357: PORTDbits.RD0 = 1;
  1626  00080A  8083               	bsf	3971,0,c	;volatile
  1627                           
  1628                           ;displayLCD.c: 358: Delay();
  1629  00080C  EC6B  F005         	call	_Delay	;wreg free
  1630                           
  1631                           ;displayLCD.c: 359: PORTDbits.RD0 = 0;
  1632  000810  9083               	bcf	3971,0,c	;volatile
  1633                           
  1634                           ;displayLCD.c: 360: Delay();
  1635  000812  EC6B  F005         	call	_Delay	;wreg free
  1636                           
  1637                           ;displayLCD.c: 364: if(data&0b00000001){PORTDbits.RD4=1;}
  1638  000816  A003               	btfss	EscreveCaractereLCD@data,0,c
  1639  000818  D002               	goto	l88
  1640  00081A  8883               	bsf	3971,4,c	;volatile
  1641  00081C  D001               	goto	l89
  1642  00081E                     l88:
  1643                           
  1644                           ;displayLCD.c: 365: else {PORTDbits.RD4=0;}
  1645  00081E  9883               	bcf	3971,4,c	;volatile
  1646  000820                     l89:
  1647                           
  1648                           ;displayLCD.c: 366: if(data&0b00000010){PORTDbits.RD5=1;}
  1649  000820  A203               	btfss	EscreveCaractereLCD@data,1,c
  1650  000822  D002               	goto	l90
  1651  000824  8A83               	bsf	3971,5,c	;volatile
  1652  000826  D001               	goto	l91
  1653  000828                     l90:
  1654                           
  1655                           ;displayLCD.c: 367: else {PORTDbits.RD5=0;}
  1656  000828  9A83               	bcf	3971,5,c	;volatile
  1657  00082A                     l91:
  1658                           
  1659                           ;displayLCD.c: 368: if(data&0b00000100){PORTDbits.RD6=1;}
  1660  00082A  A403               	btfss	EscreveCaractereLCD@data,2,c
  1661  00082C  D002               	goto	l92
  1662  00082E  8C83               	bsf	3971,6,c	;volatile
  1663  000830  D001               	goto	l93
  1664  000832                     l92:
  1665                           
  1666                           ;displayLCD.c: 369: else {PORTDbits.RD6=0;}
  1667  000832  9C83               	bcf	3971,6,c	;volatile
  1668  000834                     l93:
  1669                           
  1670                           ;displayLCD.c: 370: if(data&0b00001000){PORTDbits.RD7=1;}
  1671  000834  A603               	btfss	EscreveCaractereLCD@data,3,c
  1672  000836  D002               	goto	l94
  1673  000838  8E83               	bsf	3971,7,c	;volatile
  1674  00083A  D001               	goto	l95
  1675  00083C                     l94:
  1676                           
  1677                           ;displayLCD.c: 371: else {PORTDbits.RD7=0;}
  1678  00083C  9E83               	bcf	3971,7,c	;volatile
  1679  00083E                     l95:
  1680                           
  1681                           ;displayLCD.c: 374: PORTDbits.RD0 = 1;
  1682  00083E  8083               	bsf	3971,0,c	;volatile
  1683                           
  1684                           ;displayLCD.c: 375: Delay();
  1685  000840  EC6B  F005         	call	_Delay	;wreg free
  1686                           
  1687                           ;displayLCD.c: 376: PORTDbits.RD0 = 0;
  1688  000844  9083               	bcf	3971,0,c	;volatile
  1689                           
  1690                           ;displayLCD.c: 377: Delay();
  1691  000846  EC6B  F005         	call	_Delay	;wreg free
  1692  00084A  0012               	return		;funcret
  1693  00084C                     __end_of_EscreveCaractereLCD:
  1694                           	opt stack 0
  1695                           tblptru	equ	0xFF8
  1696                           tblptrh	equ	0xFF7
  1697                           tblptrl	equ	0xFF6
  1698                           tablat	equ	0xFF5
  1699                           indf0	equ	0xFEF
  1700                           postinc0	equ	0xFEE
  1701                           fsr0h	equ	0xFEA
  1702                           fsr0l	equ	0xFE9
  1703                           wreg	equ	0xFE8
  1704                           postdec1	equ	0xFE5
  1705                           plusw1	equ	0xFE3
  1706                           fsr1l	equ	0xFE1
  1707                           indf2	equ	0xFDF
  1708                           plusw2	equ	0xFDB
  1709                           fsr2h	equ	0xFDA
  1710                           fsr2l	equ	0xFD9
  1711                           status	equ	0xFD8
  1712                           
  1713 ;; *************** function _ConfiguraLCD *****************
  1714 ;; Defined at:
  1715 ;;		line 80 in file "displayLCD.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;		None
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;		None
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  1    wreg      void 
  1722 ;; Registers used:
  1723 ;;		wreg, status,2, status,0, cstack
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK4
  1729 ;;      Params:         0       0       0       0
  1730 ;;      Locals:         0       0       0       0
  1731 ;;      Temps:          1       0       0       0
  1732 ;;      Totals:         1       0       0       0
  1733 ;;Total ram usage:        1 bytes
  1734 ;; Hardware stack levels used:    1
  1735 ;; Hardware stack levels required when called:    2
  1736 ;; This function calls:
  1737 ;;		_Delay
  1738 ;;		_EscreveComandoLCD
  1739 ;; This function is called by:
  1740 ;;		_main
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           	psect	text11
  1745  0006B0                     __ptext11:
  1746                           	opt stack 0
  1747  0006B0                     _ConfiguraLCD:
  1748                           	opt stack 28
  1749                           
  1750                           ;displayLCD.c: 83: TRISDbits.RD2 = 0;
  1751                           
  1752                           ;incstack = 0
  1753  0006B0  9495               	bcf	3989,2,c	;volatile
  1754                           
  1755                           ;displayLCD.c: 84: TRISDbits.RD1 = 0;
  1756  0006B2  9295               	bcf	3989,1,c	;volatile
  1757                           
  1758                           ;displayLCD.c: 85: TRISDbits.RD0 = 0;
  1759  0006B4  9095               	bcf	3989,0,c	;volatile
  1760                           
  1761                           ;displayLCD.c: 88: TRISDbits.RD4=0;
  1762  0006B6  9895               	bcf	3989,4,c	;volatile
  1763                           
  1764                           ;displayLCD.c: 89: TRISDbits.RD5=0;
  1765  0006B8  9A95               	bcf	3989,5,c	;volatile
  1766                           
  1767                           ;displayLCD.c: 90: TRISDbits.RD6=0;
  1768  0006BA  9C95               	bcf	3989,6,c	;volatile
  1769                           
  1770                           ;displayLCD.c: 91: TRISDbits.RD7=0;
  1771  0006BC  9E95               	bcf	3989,7,c	;volatile
  1772                           
  1773                           ;displayLCD.c: 98: PORTDbits.RD2 = 0;
  1774  0006BE  9483               	bcf	3971,2,c	;volatile
  1775                           
  1776                           ;displayLCD.c: 99: PORTDbits.RD1 = 0;
  1777  0006C0  9283               	bcf	3971,1,c	;volatile
  1778                           
  1779                           ;displayLCD.c: 100: PORTDbits.RD0 = 0;
  1780  0006C2  9083               	bcf	3971,0,c	;volatile
  1781                           
  1782                           ;displayLCD.c: 104: PORTDbits.RD7=0;
  1783  0006C4  9E83               	bcf	3971,7,c	;volatile
  1784                           
  1785                           ;displayLCD.c: 105: PORTDbits.RD6=0;
  1786  0006C6  9C83               	bcf	3971,6,c	;volatile
  1787                           
  1788                           ;displayLCD.c: 106: PORTDbits.RD5=1;
  1789  0006C8  8A83               	bsf	3971,5,c	;volatile
  1790                           
  1791                           ;displayLCD.c: 107: PORTDbits.RD4=1;
  1792  0006CA  8883               	bsf	3971,4,c	;volatile
  1793                           
  1794                           ;displayLCD.c: 112: _delay((unsigned long)((15)*(48000000/4000.0)));
  1795  0006CC  0EEA               	movlw	234
  1796  0006CE  6E04               	movwf	??_ConfiguraLCD& (0+255),c
  1797  0006D0  0EC3               	movlw	195
  1798  0006D2                     u687:
  1799  0006D2  2EE8               	decfsz	wreg,f,c
  1800  0006D4  D7FE               	bra	u687
  1801  0006D6  2E04               	decfsz	??_ConfiguraLCD& (0+255),f,c
  1802  0006D8  D7FC               	bra	u687
  1803  0006DA  F000               	nop	
  1804                           
  1805                           ;displayLCD.c: 116: PORTDbits.RD0 = 1;
  1806  0006DC  8083               	bsf	3971,0,c	;volatile
  1807                           
  1808                           ;displayLCD.c: 117: Delay();
  1809  0006DE  EC6B  F005         	call	_Delay	;wreg free
  1810                           
  1811                           ;displayLCD.c: 118: PORTDbits.RD0 = 0;
  1812  0006E2  9083               	bcf	3971,0,c	;volatile
  1813                           
  1814                           ;displayLCD.c: 119: Delay();
  1815  0006E4  EC6B  F005         	call	_Delay	;wreg free
  1816                           
  1817                           ;displayLCD.c: 124: _delay((unsigned long)((5)*(48000000/4000.0)));
  1818  0006E8  0E4E               	movlw	78
  1819  0006EA  6E04               	movwf	??_ConfiguraLCD& (0+255),c
  1820  0006EC  0EEB               	movlw	235
  1821  0006EE                     u697:
  1822  0006EE  2EE8               	decfsz	wreg,f,c
  1823  0006F0  D7FE               	bra	u697
  1824  0006F2  2E04               	decfsz	??_ConfiguraLCD& (0+255),f,c
  1825  0006F4  D7FC               	bra	u697
  1826  0006F6  F000               	nop	
  1827                           
  1828                           ;displayLCD.c: 127: PORTDbits.RD0 = 1;
  1829  0006F8  8083               	bsf	3971,0,c	;volatile
  1830                           
  1831                           ;displayLCD.c: 128: Delay();
  1832  0006FA  EC6B  F005         	call	_Delay	;wreg free
  1833                           
  1834                           ;displayLCD.c: 129: PORTDbits.RD0 = 0;
  1835  0006FE  9083               	bcf	3971,0,c	;volatile
  1836                           
  1837                           ;displayLCD.c: 130: Delay();
  1838  000700  EC6B  F005         	call	_Delay	;wreg free
  1839                           
  1840                           ;displayLCD.c: 135: _delay((unsigned long)((5)*(48000000/4000.0)));
  1841  000704  0E4E               	movlw	78
  1842  000706  6E04               	movwf	??_ConfiguraLCD& (0+255),c
  1843  000708  0EEB               	movlw	235
  1844  00070A                     u707:
  1845  00070A  2EE8               	decfsz	wreg,f,c
  1846  00070C  D7FE               	bra	u707
  1847  00070E  2E04               	decfsz	??_ConfiguraLCD& (0+255),f,c
  1848  000710  D7FC               	bra	u707
  1849  000712  F000               	nop	
  1850                           
  1851                           ;displayLCD.c: 138: PORTDbits.RD0 = 1;
  1852  000714  8083               	bsf	3971,0,c	;volatile
  1853                           
  1854                           ;displayLCD.c: 139: Delay();
  1855  000716  EC6B  F005         	call	_Delay	;wreg free
  1856                           
  1857                           ;displayLCD.c: 140: PORTDbits.RD0 = 0;
  1858  00071A  9083               	bcf	3971,0,c	;volatile
  1859                           
  1860                           ;displayLCD.c: 141: Delay();
  1861  00071C  EC6B  F005         	call	_Delay	;wreg free
  1862                           
  1863                           ;displayLCD.c: 144: PORTDbits.RD7=0;
  1864  000720  9E83               	bcf	3971,7,c	;volatile
  1865                           
  1866                           ;displayLCD.c: 145: PORTDbits.RD6=0;
  1867  000722  9C83               	bcf	3971,6,c	;volatile
  1868                           
  1869                           ;displayLCD.c: 146: PORTDbits.RD5=1;
  1870  000724  8A83               	bsf	3971,5,c	;volatile
  1871                           
  1872                           ;displayLCD.c: 147: PORTDbits.RD4=0;
  1873  000726  9883               	bcf	3971,4,c	;volatile
  1874                           
  1875                           ;displayLCD.c: 151: PORTDbits.RD0 = 1;
  1876  000728  8083               	bsf	3971,0,c	;volatile
  1877                           
  1878                           ;displayLCD.c: 152: Delay();
  1879  00072A  EC6B  F005         	call	_Delay	;wreg free
  1880                           
  1881                           ;displayLCD.c: 153: PORTDbits.RD0 = 0;
  1882  00072E  9083               	bcf	3971,0,c	;volatile
  1883                           
  1884                           ;displayLCD.c: 154: Delay();
  1885  000730  EC6B  F005         	call	_Delay	;wreg free
  1886                           
  1887                           ;displayLCD.c: 158: EscreveComandoLCD(0b00101000);
  1888  000734  0E28               	movlw	40
  1889  000736  ECA7  F003         	call	_EscreveComandoLCD
  1890                           
  1891                           ;displayLCD.c: 159: EscreveComandoLCD(0b00000110);
  1892  00073A  0E06               	movlw	6
  1893  00073C  ECA7  F003         	call	_EscreveComandoLCD
  1894                           
  1895                           ;displayLCD.c: 160: EscreveComandoLCD(0b00001110);
  1896  000740  0E0E               	movlw	14
  1897  000742  ECA7  F003         	call	_EscreveComandoLCD
  1898                           
  1899                           ;displayLCD.c: 161: EscreveComandoLCD(0b00000001);
  1900  000746  0E01               	movlw	1
  1901  000748  ECA7  F003         	call	_EscreveComandoLCD
  1902  00074C  0012               	return		;funcret
  1903  00074E                     __end_of_ConfiguraLCD:
  1904                           	opt stack 0
  1905                           tblptru	equ	0xFF8
  1906                           tblptrh	equ	0xFF7
  1907                           tblptrl	equ	0xFF6
  1908                           tablat	equ	0xFF5
  1909                           indf0	equ	0xFEF
  1910                           postinc0	equ	0xFEE
  1911                           fsr0h	equ	0xFEA
  1912                           fsr0l	equ	0xFE9
  1913                           wreg	equ	0xFE8
  1914                           postdec1	equ	0xFE5
  1915                           plusw1	equ	0xFE3
  1916                           fsr1l	equ	0xFE1
  1917                           indf2	equ	0xFDF
  1918                           plusw2	equ	0xFDB
  1919                           fsr2h	equ	0xFDA
  1920                           fsr2l	equ	0xFD9
  1921                           status	equ	0xFD8
  1922                           
  1923 ;; *************** function _EscreveComandoLCD *****************
  1924 ;; Defined at:
  1925 ;;		line 172 in file "displayLCD.c"
  1926 ;; Parameters:    Size  Location     Type
  1927 ;;  cmd             1    wreg     unsigned char 
  1928 ;; Auto vars:     Size  Location     Type
  1929 ;;  cmd             1    2[COMRAM] unsigned char 
  1930 ;; Return value:  Size  Location     Type
  1931 ;;                  1    wreg      void 
  1932 ;; Registers used:
  1933 ;;		wreg, status,2, status,0, cstack
  1934 ;; Tracked objects:
  1935 ;;		On entry : 0/0
  1936 ;;		On exit  : 0/0
  1937 ;;		Unchanged: 0/0
  1938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK4
  1939 ;;      Params:         0       0       0       0
  1940 ;;      Locals:         1       0       0       0
  1941 ;;      Temps:          0       0       0       0
  1942 ;;      Totals:         1       0       0       0
  1943 ;;Total ram usage:        1 bytes
  1944 ;; Hardware stack levels used:    1
  1945 ;; Hardware stack levels required when called:    1
  1946 ;; This function calls:
  1947 ;;		_Delay
  1948 ;; This function is called by:
  1949 ;;		_ConfiguraLCD
  1950 ;;		_main
  1951 ;;		_CriaCaractereLCD
  1952 ;; This function uses a non-reentrant model
  1953 ;;
  1954                           
  1955                           	psect	text12
  1956  00074E                     __ptext12:
  1957                           	opt stack 0
  1958  00074E                     _EscreveComandoLCD:
  1959                           	opt stack 29
  1960                           
  1961                           ;incstack = 0
  1962                           ;EscreveComandoLCD@cmd stored from wreg
  1963  00074E  6E03               	movwf	EscreveComandoLCD@cmd,c
  1964                           
  1965                           ;displayLCD.c: 175: PORTDbits.RD2 = 0;
  1966  000750  9483               	bcf	3971,2,c	;volatile
  1967                           
  1968                           ;displayLCD.c: 176: PORTDbits.RD1 = 0;
  1969  000752  9283               	bcf	3971,1,c	;volatile
  1970                           
  1971                           ;displayLCD.c: 177: PORTDbits.RD0 = 0;
  1972  000754  9083               	bcf	3971,0,c	;volatile
  1973                           
  1974                           ;displayLCD.c: 180: if(cmd&0b00010000){PORTDbits.RD4=1;}
  1975  000756  A803               	btfss	EscreveComandoLCD@cmd,4,c
  1976  000758  D002               	goto	l29
  1977  00075A  8883               	bsf	3971,4,c	;volatile
  1978  00075C  D001               	goto	l999
  1979  00075E                     l29:
  1980                           
  1981                           ;displayLCD.c: 181: else {PORTDbits.RD4=0;}
  1982  00075E  9883               	bcf	3971,4,c	;volatile
  1983  000760                     l999:
  1984                           
  1985                           ;displayLCD.c: 182: if(cmd&0b00100000){PORTDbits.RD5=1;}
  1986  000760  AA03               	btfss	EscreveComandoLCD@cmd,5,c
  1987  000762  D002               	goto	l31
  1988  000764  8A83               	bsf	3971,5,c	;volatile
  1989  000766  D001               	goto	l1003
  1990  000768                     l31:
  1991                           
  1992                           ;displayLCD.c: 183: else {PORTDbits.RD5=0;}
  1993  000768  9A83               	bcf	3971,5,c	;volatile
  1994  00076A                     l1003:
  1995                           
  1996                           ;displayLCD.c: 184: if(cmd&0b01000000){PORTDbits.RD6=1;}
  1997  00076A  AC03               	btfss	EscreveComandoLCD@cmd,6,c
  1998  00076C  D002               	goto	l33
  1999  00076E  8C83               	bsf	3971,6,c	;volatile
  2000  000770  D001               	goto	l1007
  2001  000772                     l33:
  2002                           
  2003                           ;displayLCD.c: 185: else {PORTDbits.RD6=0;}
  2004  000772  9C83               	bcf	3971,6,c	;volatile
  2005  000774                     l1007:
  2006                           
  2007                           ;displayLCD.c: 186: if(cmd&0b10000000){PORTDbits.RD7=1;}
  2008  000774  AE03               	btfss	EscreveComandoLCD@cmd,7,c
  2009  000776  D002               	goto	l35
  2010  000778  8E83               	bsf	3971,7,c	;volatile
  2011  00077A  D001               	goto	l36
  2012  00077C                     l35:
  2013                           
  2014                           ;displayLCD.c: 187: else {PORTDbits.RD7=0;}
  2015  00077C  9E83               	bcf	3971,7,c	;volatile
  2016  00077E                     l36:
  2017                           
  2018                           ;displayLCD.c: 190: PORTDbits.RD0 = 1;
  2019  00077E  8083               	bsf	3971,0,c	;volatile
  2020                           
  2021                           ;displayLCD.c: 191: Delay();
  2022  000780  EC6B  F005         	call	_Delay	;wreg free
  2023                           
  2024                           ;displayLCD.c: 192: PORTDbits.RD0 = 0;
  2025  000784  9083               	bcf	3971,0,c	;volatile
  2026                           
  2027                           ;displayLCD.c: 193: Delay();
  2028  000786  EC6B  F005         	call	_Delay	;wreg free
  2029                           
  2030                           ;displayLCD.c: 196: if(cmd&0b00000001){PORTDbits.RD4=1;}
  2031  00078A  A003               	btfss	EscreveComandoLCD@cmd,0,c
  2032  00078C  D002               	goto	l37
  2033  00078E  8883               	bsf	3971,4,c	;volatile
  2034  000790  D001               	goto	l38
  2035  000792                     l37:
  2036                           
  2037                           ;displayLCD.c: 197: else {PORTDbits.RD4=0;}
  2038  000792  9883               	bcf	3971,4,c	;volatile
  2039  000794                     l38:
  2040                           
  2041                           ;displayLCD.c: 198: if(cmd&0b00000010){PORTDbits.RD5=1;}
  2042  000794  A203               	btfss	EscreveComandoLCD@cmd,1,c
  2043  000796  D002               	goto	l39
  2044  000798  8A83               	bsf	3971,5,c	;volatile
  2045  00079A  D001               	goto	l40
  2046  00079C                     l39:
  2047                           
  2048                           ;displayLCD.c: 199: else {PORTDbits.RD5=0;}
  2049  00079C  9A83               	bcf	3971,5,c	;volatile
  2050  00079E                     l40:
  2051                           
  2052                           ;displayLCD.c: 200: if(cmd&0b00000100){PORTDbits.RD6=1;}
  2053  00079E  A403               	btfss	EscreveComandoLCD@cmd,2,c
  2054  0007A0  D002               	goto	l41
  2055  0007A2  8C83               	bsf	3971,6,c	;volatile
  2056  0007A4  D001               	goto	l42
  2057  0007A6                     l41:
  2058                           
  2059                           ;displayLCD.c: 201: else {PORTDbits.RD6=0;}
  2060  0007A6  9C83               	bcf	3971,6,c	;volatile
  2061  0007A8                     l42:
  2062                           
  2063                           ;displayLCD.c: 202: if(cmd&0b00001000){PORTDbits.RD7=1;}
  2064  0007A8  A603               	btfss	EscreveComandoLCD@cmd,3,c
  2065  0007AA  D002               	goto	l43
  2066  0007AC  8E83               	bsf	3971,7,c	;volatile
  2067  0007AE  D001               	goto	l44
  2068  0007B0                     l43:
  2069                           
  2070                           ;displayLCD.c: 203: else {PORTDbits.RD7=0;}
  2071  0007B0  9E83               	bcf	3971,7,c	;volatile
  2072  0007B2                     l44:
  2073                           
  2074                           ;displayLCD.c: 206: PORTDbits.RD0 = 1;
  2075  0007B2  8083               	bsf	3971,0,c	;volatile
  2076                           
  2077                           ;displayLCD.c: 207: Delay();
  2078  0007B4  EC6B  F005         	call	_Delay	;wreg free
  2079                           
  2080                           ;displayLCD.c: 208: PORTDbits.RD0 = 0;
  2081  0007B8  9083               	bcf	3971,0,c	;volatile
  2082                           
  2083                           ;displayLCD.c: 209: Delay();
  2084  0007BA  EC6B  F005         	call	_Delay	;wreg free
  2085                           
  2086                           ;displayLCD.c: 214: if (cmd==0x01 || cmd==0x02 || cmd==0x03)
  2087  0007BE  0403               	decf	EscreveComandoLCD@cmd,w,c
  2088  0007C0  B4D8               	btfsc	status,2,c
  2089  0007C2  D008               	goto	l1035
  2090  0007C4  0E02               	movlw	2
  2091  0007C6  1803               	xorwf	EscreveComandoLCD@cmd,w,c
  2092  0007C8  B4D8               	btfsc	status,2,c
  2093  0007CA  D004               	goto	l1035
  2094  0007CC  0E03               	movlw	3
  2095  0007CE  1803               	xorwf	EscreveComandoLCD@cmd,w,c
  2096  0007D0  A4D8               	btfss	status,2,c
  2097  0007D2  0012               	return	
  2098  0007D4                     l1035:
  2099                           
  2100                           ;displayLCD.c: 215: { Delay(); }
  2101  0007D4  EC6B  F005         	call	_Delay	;wreg free
  2102  0007D8  0012               	return	
  2103  0007DA                     __end_of_EscreveComandoLCD:
  2104                           	opt stack 0
  2105                           tblptru	equ	0xFF8
  2106                           tblptrh	equ	0xFF7
  2107                           tblptrl	equ	0xFF6
  2108                           tablat	equ	0xFF5
  2109                           indf0	equ	0xFEF
  2110                           postinc0	equ	0xFEE
  2111                           fsr0h	equ	0xFEA
  2112                           fsr0l	equ	0xFE9
  2113                           wreg	equ	0xFE8
  2114                           postdec1	equ	0xFE5
  2115                           plusw1	equ	0xFE3
  2116                           fsr1l	equ	0xFE1
  2117                           indf2	equ	0xFDF
  2118                           plusw2	equ	0xFDB
  2119                           fsr2h	equ	0xFDA
  2120                           fsr2l	equ	0xFD9
  2121                           status	equ	0xFD8
  2122                           
  2123 ;; *************** function _Delay *****************
  2124 ;; Defined at:
  2125 ;;		line 54 in file "displayLCD.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;		None
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;  Cnt2            1    1[COMRAM] unsigned char 
  2130 ;;  Cnt1            1    0[COMRAM] unsigned char 
  2131 ;; Return value:  Size  Location     Type
  2132 ;;                  1    wreg      void 
  2133 ;; Registers used:
  2134 ;;		wreg, status,2, status,0
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK4
  2140 ;;      Params:         0       0       0       0
  2141 ;;      Locals:         2       0       0       0
  2142 ;;      Temps:          0       0       0       0
  2143 ;;      Totals:         2       0       0       0
  2144 ;;Total ram usage:        2 bytes
  2145 ;; Hardware stack levels used:    1
  2146 ;; This function calls:
  2147 ;;		Nothing
  2148 ;; This function is called by:
  2149 ;;		_ConfiguraLCD
  2150 ;;		_EscreveComandoLCD
  2151 ;;		_EnderecoCursor
  2152 ;;		_EscreveCaractereLCD
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           	psect	text13
  2157  000AD6                     __ptext13:
  2158                           	opt stack 0
  2159  000AD6                     _Delay:
  2160                           	opt stack 28
  2161                           
  2162                           ;displayLCD.c: 56: unsigned char Cnt1, Cnt2;
  2163                           ;displayLCD.c: 58: for(Cnt1 = 0; Cnt1<30; Cnt1++)
  2164                           
  2165                           ;incstack = 0
  2166  000AD6  0E00               	movlw	0
  2167  000AD8  6E01               	movwf	Delay@Cnt1,c
  2168  000ADA                     l871:
  2169  000ADA  0E1D               	movlw	29
  2170  000ADC  6401               	cpfsgt	Delay@Cnt1,c
  2171  000ADE  D001               	goto	l19
  2172  000AE0  0012               	return	
  2173  000AE2                     l19:
  2174                           
  2175                           ;displayLCD.c: 59: {
  2176                           ;displayLCD.c: 60: __nop();
  2177  000AE2  F000               	nop	
  2178                           
  2179                           ;displayLCD.c: 61: for(Cnt2 = 0; Cnt2<30; Cnt2++)
  2180  000AE4  0E00               	movlw	0
  2181  000AE6  6E02               	movwf	Delay@Cnt2,c
  2182  000AE8                     l877:
  2183  000AE8  0E1D               	movlw	29
  2184  000AEA  6402               	cpfsgt	Delay@Cnt2,c
  2185  000AEC  D001               	goto	l21
  2186  000AEE  D003               	goto	l885
  2187  000AF0                     l21:
  2188                           
  2189                           ;displayLCD.c: 62: {
  2190                           ;displayLCD.c: 63: __nop();
  2191  000AF0  F000               	nop	
  2192  000AF2  2A02               	incf	Delay@Cnt2,f,c
  2193  000AF4  D7F9               	goto	l877
  2194  000AF6                     l885:
  2195  000AF6  2A01               	incf	Delay@Cnt1,f,c
  2196  000AF8  D7F0               	goto	l871
  2197  000AFA                     __end_of_Delay:
  2198                           	opt stack 0
  2199                           tblptru	equ	0xFF8
  2200                           tblptrh	equ	0xFF7
  2201                           tblptrl	equ	0xFF6
  2202                           tablat	equ	0xFF5
  2203                           indf0	equ	0xFEF
  2204                           postinc0	equ	0xFEE
  2205                           fsr0h	equ	0xFEA
  2206                           fsr0l	equ	0xFE9
  2207                           wreg	equ	0xFE8
  2208                           postdec1	equ	0xFE5
  2209                           plusw1	equ	0xFE3
  2210                           fsr1l	equ	0xFE1
  2211                           indf2	equ	0xFDF
  2212                           plusw2	equ	0xFDB
  2213                           fsr2h	equ	0xFDA
  2214                           fsr2l	equ	0xFD9
  2215                           status	equ	0xFD8
  2216                           tblptru	equ	0xFF8
  2217                           tblptrh	equ	0xFF7
  2218                           tblptrl	equ	0xFF6
  2219                           tablat	equ	0xFF5
  2220                           indf0	equ	0xFEF
  2221                           postinc0	equ	0xFEE
  2222                           fsr0h	equ	0xFEA
  2223                           fsr0l	equ	0xFE9
  2224                           wreg	equ	0xFE8
  2225                           postdec1	equ	0xFE5
  2226                           plusw1	equ	0xFE3
  2227                           fsr1l	equ	0xFE1
  2228                           indf2	equ	0xFDF
  2229                           plusw2	equ	0xFDB
  2230                           fsr2h	equ	0xFDA
  2231                           fsr2l	equ	0xFD9
  2232                           status	equ	0xFD8
  2233                           
  2234                           	psect	rparam
  2235  0000                     tblptru	equ	0xFF8
  2236                           tblptrh	equ	0xFF7
  2237                           tblptrl	equ	0xFF6
  2238                           tablat	equ	0xFF5
  2239                           indf0	equ	0xFEF
  2240                           postinc0	equ	0xFEE
  2241                           fsr0h	equ	0xFEA
  2242                           fsr0l	equ	0xFE9
  2243                           wreg	equ	0xFE8
  2244                           postdec1	equ	0xFE5
  2245                           plusw1	equ	0xFE3
  2246                           fsr1l	equ	0xFE1
  2247                           indf2	equ	0xFDF
  2248                           plusw2	equ	0xFDB
  2249                           fsr2h	equ	0xFDA
  2250                           fsr2l	equ	0xFD9
  2251                           status	equ	0xFD8


Data Sizes:
    Strings     11
    Constant    62
    Data        7
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     35      61
    BANK0           160      0       0
    BANK1           256      0       0
    BANK4           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    EscreveFraseRamLCD@buffer	PTR unsigned char  size(2) Largest target is 15
		 -> Texto_1(CODE[7]), Texto_0(CODE[15]), EscreveInteiroLCD@texto(COMRAM[7]), 

    sp__ftoa	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(COMRAM[17]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 


Critical Paths under _main in COMRAM

    _main->_EscreveInteiroLCD
    _PosicaoCursorLCD->_EnderecoCursor
    _EnderecoCursor->_Delay
    _EscreveInteiroLCD->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _EscreveFraseRamLCD->_EscreveCaractereLCD
    _EscreveCaractereLCD->_Delay
    _ConfiguraLCD->_EscreveComandoLCD
    _EscreveComandoLCD->_Delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4006
                                             33 COMRAM     2     2      0
                       _ConfiguraLCD
                  _EscreveComandoLCD
                 _EscreveFraseRamLCD
                  _EscreveInteiroLCD
                   _PosicaoCursorLCD
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             3     1      2     214
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _PosicaoCursorLCD                                     3     2      1     627
                                              3 COMRAM     3     2      1
                     _EnderecoCursor
 ---------------------------------------------------------------------------------
 (2) _EnderecoCursor                                       1     1      0     165
                                              2 COMRAM     1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (1) _EscreveInteiroLCD                                    9     7      2    2174
                                             24 COMRAM     9     7      2
                 _EscreveFraseRamLCD
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 8     2      6    1554
                                             16 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     3      6    1199
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     287
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     418
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _EscreveFraseRamLCD                                   2     0      2     481
                                              3 COMRAM     2     0      2
                _EscreveCaractereLCD
 ---------------------------------------------------------------------------------
 (3) _EscreveCaractereLCD                                  1     1      0     180
                                              2 COMRAM     1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0     285
                                              3 COMRAM     1     1      0
                              _Delay
                  _EscreveComandoLCD
 ---------------------------------------------------------------------------------
 (1) _EscreveComandoLCD                                    1     1      0     225
                                              2 COMRAM     1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (3) _Delay                                                2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfiguraLCD
     _Delay
     _EscreveComandoLCD
       _Delay
   _EscreveComandoLCD
     _Delay
   _EscreveFraseRamLCD
     _EscreveCaractereLCD
       _Delay
   _EscreveInteiroLCD
     _EscreveFraseRamLCD
       _EscreveCaractereLCD
         _Delay
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _PosicaoCursorLCD
     _EnderecoCursor
       _Delay
   _delay_ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0      11        0.0%
BITBANK4           100      0       0       8        0.0%
BANK4              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BIGRAM_1           100      0       0      10        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     23      3D       1       64.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3D       3        0.0%
DATA                 0      0      3D      12        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Sat Jun 06 23:56:17 2020

                          l21 0AF0                            l31 0768                            l40 079E  
                          l41 07A6                            l33 0772                            l42 07A8  
                          l19 0AE2                            l43 07B0                            l35 077C  
                          l51 085E                            l44 07B2                            l36 077E  
                          l60 0894                            l37 0792                            l29 075E  
                          l61 089C                            l53 0868                            l38 0794  
                          l62 089E                            l70 08C0                            l39 079C  
                          l63 08A6                            l55 0872                            l80 07EA  
                          l64 08A8                            l56 0874                            l57 0888  
                          l90 0828                            l82 07F4                            l58 088A  
                          l91 082A                            l59 0892                            l92 0832  
                          l84 07FE                            l93 0834                            l94 083C  
                          l86 0808                            l95 083E                            l87 080A  
                          l88 081E                            l89 0820                           l175 05BC  
                         l658 0960                           l579 068C                           l668 0A36  
                         l941 0800                           l933 07EC                           l871 0ADA  
                         l937 07F6                           l885 0AF6                           l877 0AE8  
                         l999 0760                           u610 098C                           u620 09B4  
                         u617 0982                           u641 0A4A                           u707 070A  
                         u627 09AA                           u677 0ABA                           u687 06D2  
                         u697 06EE                           wreg 000FE8                          l1003 076A  
                        l1007 0774                          l1035 07D4                          l1043 0860  
                        l1311 093A                          l1047 086A                          l1307 092E  
                        l1331 0A18                          l1403 08E8                          l1411 08FC  
                        l1309 0936                          l1341 0614                          l1319 0956  
                        l1335 0A2C                          l1327 0A0C                          l1351 064E  
                        l1407 08F6                          l1423 0AB4                          l1329 0A14  
                        l1425 0AC6                          l1383 096C                          l1377 09E0  
                        l1473 05BA                          l1387 0994                          l1395 08CC  
                        l1399 08DA                          STR_1 053F                          _main 054C  
                        _itoa 09BC                          fsr0h 000FEA                          indf0 000FEF  
                        fsr2h 000FDA                          fsr0l 000FE9                          indf2 000FDF  
                        fsr1l 000FE1                          fsr2l 000FD9                          _utoa 060C  
                        start 0000                  ___param_bank 000000    __end_of_EscreveFraseRamLCD 09BC  
             __end_of_Texto_0 0538               __end_of_Texto_1 053F                         ?_main 0001  
                       ?_itoa 0011                         ?_utoa 0008               __end_of___lwdiv 096A  
             __end_of___lwmod 0A40                         _Delay 0AD6               __end_of_dpowers 0529  
        EscreveComandoLCD@cmd 0003                         tablat 000FF5                         plusw1 000FE3  
                       plusw2 000FDB                         utoa@c 0010                         utoa@v 000E  
                       status 000FD8               __initialization 0A7C                  __end_of_main 060C  
                __end_of_itoa 09FE                  __end_of_utoa 06B0                        ??_main 0022  
        __end_of_ConfiguraLCD 074E                        ??_itoa 0017                        ??_utoa 000E  
               __activetblptr 000002             _EscreveComandoLCD 074E                        ?_Delay 0001  
          ?_EscreveComandoLCD 0001                        _ADCON1 000FC1                        _ADRESH 000FC4  
                      _ADRESL 000FC3           ??_EscreveComandoLCD 0003              __end_of_delay_ms 0AD6  
           ?_PosicaoCursorLCD 0004                     ??___lwdiv 0005  __size_of_EscreveCaractereLCD 0072  
                   ??___lwmod 0005            ??_PosicaoCursorLCD 0005                        clear_0 0AA2  
   __end_of_EscreveComandoLCD 07DA                        itoa@cp 0017             _EscreveInteiroLCD 0A40  
                __pdataCOMRAM 0037                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8            ?_EscreveInteiroLCD 0019  
     __size_of_EnderecoCursor 006A           ??_EscreveInteiroLCD 001B                    __accesstop 0060  
     __end_of__initialization 0AA8                 ___rparam_used 000001                 __end_of_Delay 0AFA  
              __pcstackCOMRAM 0001     __end_of_EscreveInteiroLCD 0A7C                       ??_Delay 0001  
       __size_of_ConfiguraLCD 009E    __size_of_EscreveComandoLCD 008C            _EscreveFraseRamLCD 096A  
                   ?_delay_ms 0001           ?_EscreveFraseRamLCD 0004                  _ConfiguraLCD 06B0  
                     __Hparam 0000                       __Lparam 0000                       _Texto_0 0529  
                     _Texto_1 0538                       ___lwdiv 0918                       ___lwmod 09FE  
        ??_EscreveFraseRamLCD 0006                  __psmallconst 0500                       __pcinit 0A7C  
                     __ramtop 0500    __size_of_EscreveInteiroLCD 003C                       __ptext0 054C  
                     __ptext1 0AB2                       __ptext2 08B6                       __ptext3 084C  
                     __ptext4 0A40                       __ptext5 09BC                       __ptext6 060C  
                     __ptext7 09FE                       __ptext8 0918                       __ptext9 096A  
                     _dpowers 0501                    ??_delay_ms 0003                _EnderecoCursor 084C  
                   Delay@Cnt1 0001                     Delay@Cnt2 0002           _EscreveCaractereLCD 07DA  
        end_of_initialization 0AA8                       ftoa@buf 0026                       itoa@buf 0011  
                     itoa@val 0013                 __Lmediumconst 0000                       postdec1 000FE5  
                     postinc0 000FEE          ?_EscreveCaractereLCD 0001                       utoa@buf 0008  
                     utoa@val 000A   PosicaoCursorLCD@EnderecoLCD 0006                     _PORTDbits 000F83  
      __end_of_EnderecoCursor 08B6                     _TRISDbits 000F95     __size_of_PosicaoCursorLCD 0062  
       ??_EscreveCaractereLCD 0003                 __pidataCOMRAM 0AFA               ?_EnderecoCursor 0001  
         start_initialization 0A7C      EscreveFraseRamLCD@buffer 0004                   __pbssCOMRAM 0024  
           __size_of_delay_ms 0024              ___lwdiv@dividend 0001                      ?___lwdiv 0001  
                    ?___lwmod 0001        EscreveInteiroLCD@F3290 0037                   __smallconst 0500  
              __size_of_Delay 0024              _PosicaoCursorLCD 08B6              ___lwdiv@quotient 0005  
      EscreveInteiroLCD@valor 0019        EscreveInteiroLCD@texto 001B        EnderecoCursor@endereco 0003  
           delay_ms@delaytime 0001                     _valor_AN0 0024       EscreveCaractereLCD@data 0003  
 __size_of_EscreveFraseRamLCD 0052                    _ADCON0bits 000FC2                    _ADCON1bits 000FC1  
                  _ADCON2bits 000FC0                     copy_data0 0A90                      __Hrparam 0000  
                    __Lrparam 0000              ??_EnderecoCursor 0003              __size_of___lwdiv 0052  
            __size_of___lwmod 0042                      _delay_ms 0AB2               ___lwdiv@divisor 0003  
             ___lwdiv@counter 0007                      __ptext10 07DA                      __ptext11 06B0  
                    __ptext12 074E                      __ptext13 0AD6                 __size_of_main 00C0  
               __size_of_itoa 0042                 __size_of_utoa 00A4   __end_of_EscreveCaractereLCD 084C  
                    itoa@base 0015              ___lwmod@dividend 0001                 ?_ConfiguraLCD 0001  
    __end_of_PosicaoCursorLCD 0918        PosicaoCursorLCD@coluna 0004                      utoa@base 000C  
             ___lwmod@divisor 0003               ___lwmod@counter 0005         PosicaoCursorLCD@linha 0005  
              ??_ConfiguraLCD 0004  
